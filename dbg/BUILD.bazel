licenses(["notice"])

load("//third_party:tools/pybind.bzl", "pybind_py_library")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_github_grpc_grpc//bazel:cc_grpc_library.bzl", "cc_grpc_library")

package(
    default_visibility = ["//visibility:public"],
)

filegroup(
    name = "srcs",
    srcs = glob([
        "*.py",
        "**/*.hpp",
        "**/*.cpp",
    ]) + ["BUILD.bazel"],
)

######### LIBRARY #########

cc_library(
    name = "print",
    hdrs = glob(["print/*.hpp"]),
    srcs = glob(["print/*.cpp"]),
    copts = ["-std=c++17"],
    deps = ["//teq:teq"],
)

cc_library(
    name = "psess",
    hdrs = glob([
        "psess/*.hpp",
        "psess/**/*.hpp",
    ]),
    srcs = glob(["**/src/*.cpp"]),
    copts = ["-std=c++17"],
    deps = [
        "//teq:teq",
    ],
)

# cc_library(
#     name = "emit_plugin",
#     hdrs = glob([
#         "psess/emit/*.hpp",
#     ]),
#     srcs = glob(["**/src/*.cpp"]),
#     copts = ["-std=c++17"],
#     deps = [
#         "//eteq:eteq",
#         "//dbg:psess",
#         "//dbg:gemitter_cc_grpc",
#         "@boost//:uuid",
#         "@com_github_mingkaic_cppkg//jobs:jobs",
#     ],
# )

cc_library(
    name = "stats_plugin",
    hdrs = glob([
        "psess/emit/*.hpp",
    ]),
    srcs = glob(["**/src/*.cpp"]),
    copts = ["-std=c++17"],
    deps = [
        "//eigen:eigen",
        "//dbg:psess",
    ],
)

proto_library(
    name = "gemitter_proto",
    srcs = ["psess/emit/gemitter.proto"],
    deps = ["@com_github_onnx_onnx//:onnx_proto"],
)

cc_proto_library(
    name = "gemitter_cc_proto",
    deps = ["//dbg:gemitter_proto"],
)

# cc_grpc_library(
#     name = "gemitter_cc_grpc",
#     srcs = ["//dbg:gemitter_proto"],
#     grpc_only = True,
#     deps = ["//dbg:gemitter_cc_proto"],
# )

pybind_py_library(
    name = "print_py",
    cc_srcs = ["python/print.cpp"],
    cc_deps = [
        "//dbg:print",
        "//eteq:eteq",
    ],
    copts = ["-std=c++17"],
)

pybind_py_library(
    name = "psess_py",
    cc_srcs = ["python/psess.cpp"],
    cc_deps = [
        # "//dbg:emit_plugin",
        "//dbg:stats_plugin",
        "//eteq:eteq",
    ],
    py_deps = ["//eteq:eteq_py"],
    copts = ["-std=c++17"],
)

######### TEST #########

# cc_binary(
#     name = "mockserver",
#     srcs = ["psess/emit/mock/mockserver.cpp"],
#     deps = ["//dbg:gemitter_cc_grpc"],
# )
