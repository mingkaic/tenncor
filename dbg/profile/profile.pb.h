// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dbg/profile/profile.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_dbg_2fprofile_2fprofile_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_dbg_2fprofile_2fprofile_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "internal/onnx/onnx.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_dbg_2fprofile_2fprofile_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_dbg_2fprofile_2fprofile_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_dbg_2fprofile_2fprofile_2eproto;
namespace tenncor_profile {
class CreateProfileRequest;
class CreateProfileRequestDefaultTypeInternal;
extern CreateProfileRequestDefaultTypeInternal _CreateProfileRequest_default_instance_;
class CreateProfileRequest_RuntimeEntry_DoNotUse;
class CreateProfileRequest_RuntimeEntry_DoNotUseDefaultTypeInternal;
extern CreateProfileRequest_RuntimeEntry_DoNotUseDefaultTypeInternal _CreateProfileRequest_RuntimeEntry_DoNotUse_default_instance_;
class CreateProfileResponse;
class CreateProfileResponseDefaultTypeInternal;
extern CreateProfileResponseDefaultTypeInternal _CreateProfileResponse_default_instance_;
}  // namespace tenncor_profile
PROTOBUF_NAMESPACE_OPEN
template<> ::tenncor_profile::CreateProfileRequest* Arena::CreateMaybeMessage<::tenncor_profile::CreateProfileRequest>(Arena*);
template<> ::tenncor_profile::CreateProfileRequest_RuntimeEntry_DoNotUse* Arena::CreateMaybeMessage<::tenncor_profile::CreateProfileRequest_RuntimeEntry_DoNotUse>(Arena*);
template<> ::tenncor_profile::CreateProfileResponse* Arena::CreateMaybeMessage<::tenncor_profile::CreateProfileResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace tenncor_profile {

// ===================================================================

class CreateProfileRequest_RuntimeEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CreateProfileRequest_RuntimeEntry_DoNotUse, 
    std::string, ::PROTOBUF_NAMESPACE_ID::int64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<CreateProfileRequest_RuntimeEntry_DoNotUse, 
    std::string, ::PROTOBUF_NAMESPACE_ID::int64,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
    0 > SuperType;
  CreateProfileRequest_RuntimeEntry_DoNotUse();
  explicit CreateProfileRequest_RuntimeEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const CreateProfileRequest_RuntimeEntry_DoNotUse& other);
  static const CreateProfileRequest_RuntimeEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CreateProfileRequest_RuntimeEntry_DoNotUse*>(&_CreateProfileRequest_RuntimeEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "tenncor_profile.CreateProfileRequest.RuntimeEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dbg_2fprofile_2fprofile_2eproto);
    return ::descriptor_table_dbg_2fprofile_2fprofile_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class CreateProfileRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tenncor_profile.CreateProfileRequest) */ {
 public:
  inline CreateProfileRequest() : CreateProfileRequest(nullptr) {}
  virtual ~CreateProfileRequest();

  CreateProfileRequest(const CreateProfileRequest& from);
  CreateProfileRequest(CreateProfileRequest&& from) noexcept
    : CreateProfileRequest() {
    *this = ::std::move(from);
  }

  inline CreateProfileRequest& operator=(const CreateProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProfileRequest& operator=(CreateProfileRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateProfileRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CreateProfileRequest*>(
               &_CreateProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CreateProfileRequest& a, CreateProfileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateProfileRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProfileRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateProfileRequest* New() const final {
    return CreateMaybeMessage<CreateProfileRequest>(nullptr);
  }

  CreateProfileRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateProfileRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateProfileRequest& from);
  void MergeFrom(const CreateProfileRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateProfileRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tenncor_profile.CreateProfileRequest";
  }
  protected:
  explicit CreateProfileRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dbg_2fprofile_2fprofile_2eproto);
    return ::descriptor_table_dbg_2fprofile_2fprofile_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kRuntimeFieldNumber = 2,
    kModelFieldNumber = 1,
  };
  // map<string, int64> runtime = 2;
  int runtime_size() const;
  private:
  int _internal_runtime_size() const;
  public:
  void clear_runtime();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >&
      _internal_runtime() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >*
      _internal_mutable_runtime();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >&
      runtime() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >*
      mutable_runtime();

  // .onnx.ModelProto model = 1;
  bool has_model() const;
  private:
  bool _internal_has_model() const;
  public:
  void clear_model();
  const ::onnx::ModelProto& model() const;
  ::onnx::ModelProto* release_model();
  ::onnx::ModelProto* mutable_model();
  void set_allocated_model(::onnx::ModelProto* model);
  private:
  const ::onnx::ModelProto& _internal_model() const;
  ::onnx::ModelProto* _internal_mutable_model();
  public:
  void unsafe_arena_set_allocated_model(
      ::onnx::ModelProto* model);
  ::onnx::ModelProto* unsafe_arena_release_model();

  // @@protoc_insertion_point(class_scope:tenncor_profile.CreateProfileRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      CreateProfileRequest_RuntimeEntry_DoNotUse,
      std::string, ::PROTOBUF_NAMESPACE_ID::int64,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT64,
      0 > runtime_;
  ::onnx::ModelProto* model_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dbg_2fprofile_2fprofile_2eproto;
};
// -------------------------------------------------------------------

class CreateProfileResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:tenncor_profile.CreateProfileResponse) */ {
 public:
  inline CreateProfileResponse() : CreateProfileResponse(nullptr) {}
  virtual ~CreateProfileResponse();

  CreateProfileResponse(const CreateProfileResponse& from);
  CreateProfileResponse(CreateProfileResponse&& from) noexcept
    : CreateProfileResponse() {
    *this = ::std::move(from);
  }

  inline CreateProfileResponse& operator=(const CreateProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CreateProfileResponse& operator=(CreateProfileResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CreateProfileResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateProfileResponse* internal_default_instance() {
    return reinterpret_cast<const CreateProfileResponse*>(
               &_CreateProfileResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CreateProfileResponse& a, CreateProfileResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CreateProfileResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CreateProfileResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CreateProfileResponse* New() const final {
    return CreateMaybeMessage<CreateProfileResponse>(nullptr);
  }

  CreateProfileResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CreateProfileResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CreateProfileResponse& from);
  void MergeFrom(const CreateProfileResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateProfileResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "tenncor_profile.CreateProfileResponse";
  }
  protected:
  explicit CreateProfileResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_dbg_2fprofile_2fprofile_2eproto);
    return ::descriptor_table_dbg_2fprofile_2fprofile_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:tenncor_profile.CreateProfileResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_dbg_2fprofile_2fprofile_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateProfileRequest

// .onnx.ModelProto model = 1;
inline bool CreateProfileRequest::_internal_has_model() const {
  return this != internal_default_instance() && model_ != nullptr;
}
inline bool CreateProfileRequest::has_model() const {
  return _internal_has_model();
}
inline const ::onnx::ModelProto& CreateProfileRequest::_internal_model() const {
  const ::onnx::ModelProto* p = model_;
  return p != nullptr ? *p : *reinterpret_cast<const ::onnx::ModelProto*>(
      &::onnx::_ModelProto_default_instance_);
}
inline const ::onnx::ModelProto& CreateProfileRequest::model() const {
  // @@protoc_insertion_point(field_get:tenncor_profile.CreateProfileRequest.model)
  return _internal_model();
}
inline void CreateProfileRequest::unsafe_arena_set_allocated_model(
    ::onnx::ModelProto* model) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_);
  }
  model_ = model;
  if (model) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:tenncor_profile.CreateProfileRequest.model)
}
inline ::onnx::ModelProto* CreateProfileRequest::release_model() {
  
  ::onnx::ModelProto* temp = model_;
  model_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::onnx::ModelProto* CreateProfileRequest::unsafe_arena_release_model() {
  // @@protoc_insertion_point(field_release:tenncor_profile.CreateProfileRequest.model)
  
  ::onnx::ModelProto* temp = model_;
  model_ = nullptr;
  return temp;
}
inline ::onnx::ModelProto* CreateProfileRequest::_internal_mutable_model() {
  
  if (model_ == nullptr) {
    auto* p = CreateMaybeMessage<::onnx::ModelProto>(GetArena());
    model_ = p;
  }
  return model_;
}
inline ::onnx::ModelProto* CreateProfileRequest::mutable_model() {
  // @@protoc_insertion_point(field_mutable:tenncor_profile.CreateProfileRequest.model)
  return _internal_mutable_model();
}
inline void CreateProfileRequest::set_allocated_model(::onnx::ModelProto* model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(model_);
  }
  if (model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(model)->GetArena();
    if (message_arena != submessage_arena) {
      model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, model, submessage_arena);
    }
    
  } else {
    
  }
  model_ = model;
  // @@protoc_insertion_point(field_set_allocated:tenncor_profile.CreateProfileRequest.model)
}

// map<string, int64> runtime = 2;
inline int CreateProfileRequest::_internal_runtime_size() const {
  return runtime_.size();
}
inline int CreateProfileRequest::runtime_size() const {
  return _internal_runtime_size();
}
inline void CreateProfileRequest::clear_runtime() {
  runtime_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >&
CreateProfileRequest::_internal_runtime() const {
  return runtime_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >&
CreateProfileRequest::runtime() const {
  // @@protoc_insertion_point(field_map:tenncor_profile.CreateProfileRequest.runtime)
  return _internal_runtime();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >*
CreateProfileRequest::_internal_mutable_runtime() {
  return runtime_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::PROTOBUF_NAMESPACE_ID::int64 >*
CreateProfileRequest::mutable_runtime() {
  // @@protoc_insertion_point(field_mutable_map:tenncor_profile.CreateProfileRequest.runtime)
  return _internal_mutable_runtime();
}

// -------------------------------------------------------------------

// CreateProfileResponse

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace tenncor_profile

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_dbg_2fprofile_2fprofile_2eproto
