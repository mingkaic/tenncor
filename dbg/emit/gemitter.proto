syntax = "proto3";

import "pbm/graph.proto";

package gemitter;

// ======== GENERAL MESSAGE OBJECTS ========

message GraphInfo {
    string graph_id = 1;

    tenncor.Graph graph = 2;
}

message NodeData {
    string graph_id = 1;

    int32 node_idx = 2;

    repeated float data = 3;
}

enum Status {
    OK = 0;
    BAD_INPUT = 1; // basically 400's error
    INTERNAL_ERR = 2; // basically 500's error
    UNKNOWN = 3; // something bad
}

// ======== REQUEST + RESPONSE MESSAGES ========

message Empty {}

message CreateGraphRequest {
    GraphInfo payload = 1;
}

message CreateGraphResponse {
    Status status = 1;

    string message = 2;
}

message UpdateNodeDataRequest {
    NodeData payload = 1;
}

message UpdateNodeDataResponse {
    Status status = 1;

    string message = 2;
}

message DeleteGraphRequest {
    string graph_id = 1;
}

message DeleteGraphResponse {
    Status status = 1;

    string message = 2;
}

service GraphEmitter {
    rpc HealthCheck (Empty) returns (Empty);

    // Create or update graph
    rpc CreateGraph (CreateGraphRequest) returns (CreateGraphResponse);

    // Update (tensor) data on existing nodes
    rpc UpdateNodeData (stream UpdateNodeDataRequest) returns (UpdateNodeDataResponse);

    // Delete graph
    rpc DeleteGraph (DeleteGraphRequest) returns (DeleteGraphResponse);
}
