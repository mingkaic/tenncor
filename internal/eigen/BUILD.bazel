licenses(["notice"])

filegroup(
    name = "srcs",
    srcs = [
        ":eigen_hdrs",
        ":eigen_srcs",
        ":mock_hdrs",
        ":mock_srcs",
        ":test_srcs",
        "BUILD.bazel",
    ],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "eigen_hdrs",
    srcs = glob(["*.hpp"]),
)

filegroup(
    name = "eigen_srcs",
    srcs = glob(["src/*.cpp"]),
)

filegroup(
    name = "mock_hdrs",
    srcs = glob(["mock/*.hpp"]),
)

filegroup(
    name = "mock_srcs",
    srcs = glob(["mock/*.cpp"]),
)

filegroup(
    name = "test_srcs",
    srcs = glob(["test/*.cpp"]),
)

######### LIBRARY #########

config_setting(
    name = "fast_build",
    values = {
        "define": "ETEQ_CFG=MIN",
    },
    visibility = ["//visibility:public"],
)

config_setting(
    name = "full_build",
    values = {
        "define": "ETEQ_CFG=FULL",
    },
    visibility = ["//visibility:public"],
)

GEN_CMD_FMT = """$(location //tools/egen:egen) --plugins \
plugins.dtypes:DTypesPlugin \
plugins.opcodes:OpcodesPlugin \
--out $(@D)/generated \
--strip_prefix $$(dirname $$(dirname $(@D))) \
--cfgs $(locations //cfg:{})"""

GEN_HDRS = [
    "generated/opcode.hpp",
    "generated/dtype.hpp",
]

GEN_SRCS = [
    "generated/opcode.cpp",
    "generated/dtype.cpp",
]

genrule(
    name = "generated_eigen",
    srcs = select({
        "//conditions:default": ["//cfg:tenncor_min"],
        ":fast_build": ["//cfg:tenncor_min"],
        ":full_build": ["//cfg:tenncor"]
    }),
    outs = GEN_HDRS + GEN_SRCS,
    tools = ["//tools/egen:egen"],
    cmd = select({
        "//conditions:default": GEN_CMD_FMT.format("tenncor_min"),
        ":fast_build": GEN_CMD_FMT.format("tenncor_min"),
        ":full_build": GEN_CMD_FMT.format("tenncor"),
    })
)

cc_library(
    name = "eigen",
    hdrs = [":eigen_hdrs"] + [
        ':'+hdr for hdr in GEN_HDRS
    ],
    srcs = [":eigen_srcs"] + [
        ':'+src for src in GEN_SRCS
    ],
    copts = ["-std=c++17"],
    deps = [
        "//internal/teq:teq",
        "//internal/utils/coord:coord",
        "@boost//:uuid",
        "@boost//:pool",
        "@com_github_eigenteam_eigen//:eigen",
    ],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "mock",
    hdrs = [":mock_hdrs"],
    srcs = [":mock_srcs"],
    copts = ["-std=c++17"],
    deps = [
        ":eigen",
        "//internal/teq:mock",
    ],
    visibility = ["//visibility:public"],
)

######### TEST #########

cc_test(
    name = "test",
    srcs = [":test_srcs"],
    copts = ["-std=c++17"],
    deps = [
        ":mock",
        "//dbg/print:print",
        "//testutil:tutil",
        "@com_github_mingkaic_cppkg//diff:diff",
        "@com_github_mingkaic_cppkg//exam:exam",
    ],
    linkstatic = True,
)
