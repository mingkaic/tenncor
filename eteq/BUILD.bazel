licenses(["notice"])

load("//third_party/drake_rules:pybind.bzl", "pybind_library")

filegroup(
    name = "srcs",
    srcs = glob([
        "*.hpp",
        "src/*.cpp",
    ]) + ["BUILD.bazel"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "ctest_srcs",
    srcs = glob([
        "test/*.hpp",
        "test/*.cpp",
    ]),
)

filegroup(
    name = "ptest_srcs",
    srcs = glob([
        "test/*.py",
    ]),
)

filegroup(
    name = "benchmark_srcs",
    srcs = glob([
        "bm/*.hpp",
        "bm/*.cpp",
    ]),
)

######### LIBRARY #########

GEN_CMD_FMT = """$(location //egen:egen) --plugins \
plugins.apis:APIsPlugin \
plugins.pyapis:PyAPIsPlugin \
--out $(@D)/generated \
--strip_prefix=$$(dirname $(@D)) \
--cfgs $(locations //cfg:{})"""

GEN_HDRS = [
    "generated/api.hpp",
    "generated/pyapi.hpp",
]

genrule(
    name = "generated_ead",
    srcs = select({
        "//conditions:default": ["//cfg:eteq_min"],
        "//eigen:fast_build": ["//cfg:eteq_min"],
        "//eigen:full_build": ["//cfg:eteq"]
    }),
    outs = GEN_HDRS + [
        "generated/api.cpp",
        "generated/pyapi_tenncor.cpp",
    ],
    tools = ["//egen:egen"],
    cmd = select({
        "//conditions:default": GEN_CMD_FMT.format("eteq_min"),
        "//eigen:fast_build": GEN_CMD_FMT.format("eteq_min"),
        "//eigen:full_build": GEN_CMD_FMT.format("eteq"),
    })
)

cc_library(
    name = "eteq",
    hdrs = glob(["*.hpp"]) + [
        ':'+hdr for hdr in GEN_HDRS
    ],
    srcs = glob(["src/*.cpp"]) + [
        ":generated/api.cpp",
    ],
    copts = ["-std=c++17"],
    deps = [
        "//eigen:eigen",
        "//pbm:pbm",
        "//tag:tag",
        "//opt:opt",
    ],
    visibility = ["//visibility:public"],
)

pybind_library(
    name = "tenncor_py",
    cc_srcs = [":generated/pyapi_tenncor.cpp"],
    cc_deps = ["//eteq:eteq"],
)

pybind_library(
    name = "eteq_py",
    cc_srcs = ["//eteq:python/eteq.cpp"],
    cc_deps = [
        "//eteq:eteq",
        "//pyutils:pyutils",
    ],
    py_deps = ["//eteq:tenncor_py"],
    visibility = ["//visibility:public"],
)

######### TEST #########

cc_test(
    name = "ctest",
    srcs = ["//eteq:ctest_srcs"],
    copts = ["-std=c++17"],
    deps = [
        "//eteq:eteq",
        "//dbg:stream_out",
        "@gtest//:gtest",
        "@com_github_mingkaic_cppkg//diff:diff",
        "@com_github_mingkaic_cppkg//exam:exam",
    ],
    linkstatic = True,
    data = [
        "//:test_models",
        "//cfg:optimizations",
    ],
)

py_test(
    name = "ptest",
    srcs = ["//eteq:ptest_srcs"],
    deps = [
        "//eteq:eteq_py",
        "//testutil:pyunit_util",
    ],
    data = ["//testutil:ead_testcase_template"],
)

######### BENCHMARK #########

cc_binary(
    name = "benchmark",
    srcs = ["bm/benchmark.cpp"],
    deps = [
        "//eteq:eteq",
        "@com_github_google_benchmark//:benchmark",
    ],
    copts = ["-std=c++17"],
    data = ["//cfg:optimizations"],
)
