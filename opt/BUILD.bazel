licenses(["notice"])

load("//third_party:tools/protobuf.bzl", "cc_proto_library")

package(
    default_visibility = ["//visibility:public"],
)

filegroup(
    name = "srcs",
    srcs = glob([
        "*.hpp",
        "src/*.cpp",
    ]) + ["BUILD.bazel"],
)

filegroup(
    name = "test_srcs",
    srcs = glob([
        "test/*.hpp",
        "test/*.cpp",
    ]),
    visibility = ["//visibility:private"],
)

######### LIBRARY #########

cc_library(
    name = "opt",
    hdrs = glob(["*.hpp"]),
    srcs = glob(["src/*.cpp"]),
    copts = ["-std=c++17"],
    deps = [
        "//opt:opt_cc_proto",
        "//query:query",
    ],
)

proto_library(
    name = "opt_proto",
    srcs = ["optimize.proto"],
    deps = ["//query:query_proto"],
)

cc_proto_library(
    name = "opt_cc_proto",
    srcs = ["optimize.proto"],
    copts = ["-std=c++17"],
    deps = ["//query:query_cc_proto"],
    proto_deps = ["//query:query.proto"],
    proto_paths = ["$$(dirname $(location optimize.proto))/.."],
)

cc_library(
    name = "mock_opt",
    hdrs = glob(["mock/*.hpp"]),
    copts = ["-std=c++17"],
    deps = ["//opt:opt"],
    visibility = ["//visibility:public"],
)

######### TEST #########

cc_test(
    name = "test",
    srcs = ["//opt:test_srcs"],
    copts = ["-std=c++17"],
    deps = [
        "//dbg:print",
        "//teq:mock_teq",
        "//opt:mock_opt",
        "//testutil:tutil",
        "@gtest//:gtest",
    ],
    data = [
        "//cfg:optimizations",
    ],
    linkstatic = True,
)
