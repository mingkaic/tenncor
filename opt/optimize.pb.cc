// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: opt/optimize.proto

#include "opt/optimize.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_opt_2foptimize_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Scalar_opt_2foptimize_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opt_2foptimize_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_TargOp_AttrsEntry_DoNotUse_opt_2foptimize_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opt_2foptimize_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Conversion_opt_2foptimize_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_opt_2foptimize_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TargOp_opt_2foptimize_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_query_2fquery_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Attribute_query_2fquery_2eproto;
namespace opt {
class TargetNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetNode> _instance;
  const ::opt::Scalar* cst_;
  const ::opt::TargOp* op_;
  ::google::protobuf::internal::ArenaStringPtr symb_;
} _TargetNode_default_instance_;
class ScalarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Scalar> _instance;
} _Scalar_default_instance_;
class TargOp_AttrsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargOp_AttrsEntry_DoNotUse> _instance;
} _TargOp_AttrsEntry_DoNotUse_default_instance_;
class TargOpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargOp> _instance;
} _TargOp_default_instance_;
class ConversionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Conversion> _instance;
} _Conversion_default_instance_;
class OptimizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Optimization> _instance;
} _Optimization_default_instance_;
}  // namespace opt
static void InitDefaultsScalar_opt_2foptimize_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opt::_Scalar_default_instance_;
    new (ptr) ::opt::Scalar();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opt::Scalar::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Scalar_opt_2foptimize_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsScalar_opt_2foptimize_2eproto}, {}};

static void InitDefaultsTargOp_AttrsEntry_DoNotUse_opt_2foptimize_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opt::_TargOp_AttrsEntry_DoNotUse_default_instance_;
    new (ptr) ::opt::TargOp_AttrsEntry_DoNotUse();
  }
  ::opt::TargOp_AttrsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TargOp_AttrsEntry_DoNotUse_opt_2foptimize_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTargOp_AttrsEntry_DoNotUse_opt_2foptimize_2eproto}, {
      &scc_info_Attribute_query_2fquery_2eproto.base,}};

static void InitDefaultsTargOp_opt_2foptimize_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opt::_TargetNode_default_instance_;
    new (ptr) ::opt::TargetNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::opt::_TargOp_default_instance_;
    new (ptr) ::opt::TargOp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opt::TargetNode::InitAsDefaultInstance();
  ::opt::TargOp::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TargOp_opt_2foptimize_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTargOp_opt_2foptimize_2eproto}, {
      &scc_info_TargOp_AttrsEntry_DoNotUse_opt_2foptimize_2eproto.base,
      &scc_info_Scalar_opt_2foptimize_2eproto.base,}};

static void InitDefaultsConversion_opt_2foptimize_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opt::_Conversion_default_instance_;
    new (ptr) ::opt::Conversion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opt::Conversion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Conversion_opt_2foptimize_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsConversion_opt_2foptimize_2eproto}, {
      &scc_info_Attribute_query_2fquery_2eproto.base,
      &scc_info_TargOp_opt_2foptimize_2eproto.base,}};

static void InitDefaultsOptimization_opt_2foptimize_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::opt::_Optimization_default_instance_;
    new (ptr) ::opt::Optimization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::opt::Optimization::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Optimization_opt_2foptimize_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOptimization_opt_2foptimize_2eproto}, {
      &scc_info_Conversion_opt_2foptimize_2eproto.base,}};

void InitDefaults_opt_2foptimize_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Scalar_opt_2foptimize_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargOp_AttrsEntry_DoNotUse_opt_2foptimize_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TargOp_opt_2foptimize_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Conversion_opt_2foptimize_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Optimization_opt_2foptimize_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_opt_2foptimize_2eproto[6];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_opt_2foptimize_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_opt_2foptimize_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_opt_2foptimize_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opt::TargetNode, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::opt::TargetNode, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::opt::TargetNodeDefaultTypeInternal, cst_),
  offsetof(::opt::TargetNodeDefaultTypeInternal, op_),
  offsetof(::opt::TargetNodeDefaultTypeInternal, symb_),
  PROTOBUF_FIELD_OFFSET(::opt::TargetNode, val_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opt::Scalar, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opt::Scalar, value_),
  PROTOBUF_FIELD_OFFSET(::opt::Scalar, shape_),
  PROTOBUF_FIELD_OFFSET(::opt::TargOp_AttrsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::opt::TargOp_AttrsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opt::TargOp_AttrsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::opt::TargOp_AttrsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opt::TargOp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opt::TargOp, opname_),
  PROTOBUF_FIELD_OFFSET(::opt::TargOp, attrs_),
  PROTOBUF_FIELD_OFFSET(::opt::TargOp, args_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opt::Conversion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opt::Conversion, srcs_),
  PROTOBUF_FIELD_OFFSET(::opt::Conversion, dest_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::opt::Optimization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::opt::Optimization, conversions_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::opt::TargetNode)},
  { 9, -1, sizeof(::opt::Scalar)},
  { 16, 23, sizeof(::opt::TargOp_AttrsEntry_DoNotUse)},
  { 25, -1, sizeof(::opt::TargOp)},
  { 33, -1, sizeof(::opt::Conversion)},
  { 40, -1, sizeof(::opt::Optimization)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::opt::_TargetNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opt::_Scalar_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opt::_TargOp_AttrsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opt::_TargOp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opt::_Conversion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::opt::_Optimization_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_opt_2foptimize_2eproto = {
  {}, AddDescriptors_opt_2foptimize_2eproto, "opt/optimize.proto", schemas,
  file_default_instances, TableStruct_opt_2foptimize_2eproto::offsets,
  file_level_metadata_opt_2foptimize_2eproto, 6, file_level_enum_descriptors_opt_2foptimize_2eproto, file_level_service_descriptors_opt_2foptimize_2eproto,
};

const char descriptor_table_protodef_opt_2foptimize_2eproto[] =
  "\n\022opt/optimize.proto\022\003opt\032\021query/query.p"
  "roto\"Z\n\nTargetNode\022\032\n\003cst\030\001 \001(\0132\013.opt.Sc"
  "alarH\000\022\031\n\002op\030\002 \001(\0132\013.opt.TargOpH\000\022\016\n\004sym"
  "b\030\003 \001(\tH\000B\005\n\003val\"&\n\006Scalar\022\r\n\005value\030\001 \001("
  "\001\022\r\n\005shape\030\002 \001(\t\"\236\001\n\006TargOp\022\016\n\006opname\030\001 "
  "\001(\t\022%\n\005attrs\030\002 \003(\0132\026.opt.TargOp.AttrsEnt"
  "ry\022\035\n\004args\030\003 \003(\0132\017.opt.TargetNode\032>\n\nAtt"
  "rsEntry\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.qu"
  "ery.Attribute:\0028\001\"F\n\nConversion\022\031\n\004srcs\030"
  "\001 \003(\0132\013.query.Node\022\035\n\004dest\030\002 \001(\0132\017.opt.T"
  "argetNode\"4\n\014Optimization\022$\n\013conversions"
  "\030\001 \003(\0132\017.opt.Conversionb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_opt_2foptimize_2eproto = {
  false, InitDefaults_opt_2foptimize_2eproto, 
  descriptor_table_protodef_opt_2foptimize_2eproto,
  "opt/optimize.proto", &assign_descriptors_table_opt_2foptimize_2eproto, 471,
};

void AddDescriptors_opt_2foptimize_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_query_2fquery_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_opt_2foptimize_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_opt_2foptimize_2eproto = []() { AddDescriptors_opt_2foptimize_2eproto(); return true; }();
namespace opt {

// ===================================================================

void TargetNode::InitAsDefaultInstance() {
  ::opt::_TargetNode_default_instance_.cst_ = const_cast< ::opt::Scalar*>(
      ::opt::Scalar::internal_default_instance());
  ::opt::_TargetNode_default_instance_.op_ = const_cast< ::opt::TargOp*>(
      ::opt::TargOp::internal_default_instance());
  ::opt::_TargetNode_default_instance_.symb_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
class TargetNode::HasBitSetters {
 public:
  static const ::opt::Scalar& cst(const TargetNode* msg);
  static const ::opt::TargOp& op(const TargetNode* msg);
};

const ::opt::Scalar&
TargetNode::HasBitSetters::cst(const TargetNode* msg) {
  return *msg->val_.cst_;
}
const ::opt::TargOp&
TargetNode::HasBitSetters::op(const TargetNode* msg) {
  return *msg->val_.op_;
}
void TargetNode::set_allocated_cst(::opt::Scalar* cst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_val();
  if (cst) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cst, submessage_arena);
    }
    set_has_cst();
    val_.cst_ = cst;
  }
  // @@protoc_insertion_point(field_set_allocated:opt.TargetNode.cst)
}
void TargetNode::set_allocated_op(::opt::TargOp* op) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_val();
  if (op) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      op = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, op, submessage_arena);
    }
    set_has_op();
    val_.op_ = op;
  }
  // @@protoc_insertion_point(field_set_allocated:opt.TargetNode.op)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetNode::kCstFieldNumber;
const int TargetNode::kOpFieldNumber;
const int TargetNode::kSymbFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetNode::TargetNode()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opt.TargetNode)
}
TargetNode::TargetNode(const TargetNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_val();
  switch (from.val_case()) {
    case kCst: {
      mutable_cst()->::opt::Scalar::MergeFrom(from.cst());
      break;
    }
    case kOp: {
      mutable_op()->::opt::TargOp::MergeFrom(from.op());
      break;
    }
    case kSymb: {
      set_symb(from.symb());
      break;
    }
    case VAL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:opt.TargetNode)
}

void TargetNode::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TargOp_opt_2foptimize_2eproto.base);
  clear_has_val();
}

TargetNode::~TargetNode() {
  // @@protoc_insertion_point(destructor:opt.TargetNode)
  SharedDtor();
}

void TargetNode::SharedDtor() {
  if (has_val()) {
    clear_val();
  }
}

void TargetNode::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargetNode& TargetNode::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TargOp_opt_2foptimize_2eproto.base);
  return *internal_default_instance();
}


void TargetNode::clear_val() {
// @@protoc_insertion_point(one_of_clear_start:opt.TargetNode)
  switch (val_case()) {
    case kCst: {
      delete val_.cst_;
      break;
    }
    case kOp: {
      delete val_.op_;
      break;
    }
    case kSymb: {
      val_.symb_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VAL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VAL_NOT_SET;
}


void TargetNode::Clear() {
// @@protoc_insertion_point(message_clear_start:opt.TargetNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_val();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TargetNode::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TargetNode*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .opt.Scalar cst = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opt::Scalar::_InternalParse;
        object = msg->mutable_cst();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .opt.TargOp op = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opt::TargOp::_InternalParse;
        object = msg->mutable_op();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // string symb = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opt.TargetNode.symb");
        object = msg->mutable_symb();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TargetNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opt.TargetNode)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .opt.Scalar cst = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cst()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opt.TargOp op = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_op()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string symb = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symb()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->symb().data(), static_cast<int>(this->symb().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opt.TargetNode.symb"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opt.TargetNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opt.TargetNode)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TargetNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opt.TargetNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .opt.Scalar cst = 1;
  if (has_cst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::cst(this), output);
  }

  // .opt.TargOp op = 2;
  if (has_op()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::op(this), output);
  }

  // string symb = 3;
  if (has_symb()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symb().data(), static_cast<int>(this->symb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opt.TargetNode.symb");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->symb(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opt.TargetNode)
}

::google::protobuf::uint8* TargetNode::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opt.TargetNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .opt.Scalar cst = 1;
  if (has_cst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::cst(this), target);
  }

  // .opt.TargOp op = 2;
  if (has_op()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::op(this), target);
  }

  // string symb = 3;
  if (has_symb()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->symb().data(), static_cast<int>(this->symb().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opt.TargetNode.symb");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->symb(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opt.TargetNode)
  return target;
}

size_t TargetNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opt.TargetNode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (val_case()) {
    // .opt.Scalar cst = 1;
    case kCst: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *val_.cst_);
      break;
    }
    // .opt.TargOp op = 2;
    case kOp: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *val_.op_);
      break;
    }
    // string symb = 3;
    case kSymb: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symb());
      break;
    }
    case VAL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargetNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opt.TargetNode)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetNode* source =
      ::google::protobuf::DynamicCastToGenerated<TargetNode>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opt.TargetNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opt.TargetNode)
    MergeFrom(*source);
  }
}

void TargetNode::MergeFrom(const TargetNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opt.TargetNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.val_case()) {
    case kCst: {
      mutable_cst()->::opt::Scalar::MergeFrom(from.cst());
      break;
    }
    case kOp: {
      mutable_op()->::opt::TargOp::MergeFrom(from.op());
      break;
    }
    case kSymb: {
      set_symb(from.symb());
      break;
    }
    case VAL_NOT_SET: {
      break;
    }
  }
}

void TargetNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opt.TargetNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetNode::CopyFrom(const TargetNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opt.TargetNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetNode::IsInitialized() const {
  return true;
}

void TargetNode::Swap(TargetNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetNode::InternalSwap(TargetNode* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(val_, other->val_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata TargetNode::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opt_2foptimize_2eproto);
  return ::file_level_metadata_opt_2foptimize_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Scalar::InitAsDefaultInstance() {
}
class Scalar::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scalar::kValueFieldNumber;
const int Scalar::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scalar::Scalar()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opt.Scalar)
}
Scalar::Scalar(const Scalar& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.shape().size() > 0) {
    shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shape_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:opt.Scalar)
}

void Scalar::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Scalar_opt_2foptimize_2eproto.base);
  shape_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

Scalar::~Scalar() {
  // @@protoc_insertion_point(destructor:opt.Scalar)
  SharedDtor();
}

void Scalar::SharedDtor() {
  shape_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Scalar::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Scalar& Scalar::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Scalar_opt_2foptimize_2eproto.base);
  return *internal_default_instance();
}


void Scalar::Clear() {
// @@protoc_insertion_point(message_clear_start:opt.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Scalar::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Scalar*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // double value = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 9) goto handle_unusual;
        msg->set_value(::google::protobuf::io::UnalignedLoad<double>(ptr));
        ptr += sizeof(double);
        break;
      }
      // string shape = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opt.Scalar.shape");
        object = msg->mutable_shape();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Scalar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opt.Scalar)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (9 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string shape = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shape()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->shape().data(), static_cast<int>(this->shape().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opt.Scalar.shape"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opt.Scalar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opt.Scalar)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Scalar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opt.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->value(), output);
  }

  // string shape = 2;
  if (this->shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shape().data(), static_cast<int>(this->shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opt.Scalar.shape");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->shape(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opt.Scalar)
}

::google::protobuf::uint8* Scalar::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opt.Scalar)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double value = 1;
  if (this->value() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->value(), target);
  }

  // string shape = 2;
  if (this->shape().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->shape().data(), static_cast<int>(this->shape().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opt.Scalar.shape");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->shape(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opt.Scalar)
  return target;
}

size_t Scalar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opt.Scalar)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string shape = 2;
  if (this->shape().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->shape());
  }

  // double value = 1;
  if (this->value() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Scalar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opt.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  const Scalar* source =
      ::google::protobuf::DynamicCastToGenerated<Scalar>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opt.Scalar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opt.Scalar)
    MergeFrom(*source);
  }
}

void Scalar::MergeFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opt.Scalar)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.shape().size() > 0) {

    shape_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shape_);
  }
  if (from.value() != 0) {
    set_value(from.value());
  }
}

void Scalar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opt.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scalar::CopyFrom(const Scalar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opt.Scalar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scalar::IsInitialized() const {
  return true;
}

void Scalar::Swap(Scalar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scalar::InternalSwap(Scalar* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  shape_.Swap(&other->shape_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
}

::google::protobuf::Metadata Scalar::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opt_2foptimize_2eproto);
  return ::file_level_metadata_opt_2foptimize_2eproto[kIndexInFileMessages];
}


// ===================================================================

TargOp_AttrsEntry_DoNotUse::TargOp_AttrsEntry_DoNotUse() {}
TargOp_AttrsEntry_DoNotUse::TargOp_AttrsEntry_DoNotUse(::google::protobuf::Arena* arena)
    : SuperType(arena) {}
void TargOp_AttrsEntry_DoNotUse::MergeFrom(const TargOp_AttrsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TargOp_AttrsEntry_DoNotUse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opt_2foptimize_2eproto);
  return ::file_level_metadata_opt_2foptimize_2eproto[2];
}
void TargOp_AttrsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TargOp_AttrsEntry_DoNotUse::_ParseMap(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx) {
  using MF = ::google::protobuf::internal::MapField<
      TargOp_AttrsEntry_DoNotUse, EntryKeyType, EntryValueType,
      kEntryKeyFieldType, kEntryValueFieldType,
      kEntryDefaultEnumValue>;
  auto mf = static_cast<MF*>(object);
  Parser<MF, ::google::protobuf::Map<EntryKeyType, EntryValueType>> parser(mf);
#define DO_(x) if (!(x)) return false
  DO_(parser.ParseMap(begin, end));
  DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
    parser.key().data(), static_cast<int>(parser.key().length()),
    ::google::protobuf::internal::WireFormatLite::PARSE,
    "opt.TargOp.AttrsEntry.key"));
#undef DO_
  return true;
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER


// ===================================================================

void TargOp::InitAsDefaultInstance() {
}
class TargOp::HasBitSetters {
 public:
};

void TargOp::clear_attrs() {
  attrs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargOp::kOpnameFieldNumber;
const int TargOp::kAttrsFieldNumber;
const int TargOp::kArgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargOp::TargOp()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opt.TargOp)
}
TargOp::TargOp(const TargOp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      args_(from.args_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attrs_.MergeFrom(from.attrs_);
  opname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.opname().size() > 0) {
    opname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opname_);
  }
  // @@protoc_insertion_point(copy_constructor:opt.TargOp)
}

void TargOp::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_TargOp_opt_2foptimize_2eproto.base);
  opname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TargOp::~TargOp() {
  // @@protoc_insertion_point(destructor:opt.TargOp)
  SharedDtor();
}

void TargOp::SharedDtor() {
  opname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargOp::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TargOp& TargOp::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_TargOp_opt_2foptimize_2eproto.base);
  return *internal_default_instance();
}


void TargOp::Clear() {
// @@protoc_insertion_point(message_clear_start:opt.TargOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attrs_.Clear();
  args_.Clear();
  opname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* TargOp::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<TargOp*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string opname = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("opt.TargOp.opname");
        object = msg->mutable_opname();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // map<string, .query.Attribute> attrs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::SlowMapEntryParser;
          auto parse_map = ::opt::TargOp_AttrsEntry_DoNotUse::_ParseMap;
          ctx->extra_parse_data().payload.clear();
          ctx->extra_parse_data().parse_map = parse_map;
          object = &msg->attrs_;
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(parse_map(ptr, newend, object, ctx));
          ptr = newend;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // repeated .opt.TargetNode args = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opt::TargetNode::_InternalParse;
          object = msg->add_args();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 26 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool TargOp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opt.TargOp)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string opname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_opname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->opname().data(), static_cast<int>(this->opname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opt.TargOp.opname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .query.Attribute> attrs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          TargOp_AttrsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TargOp_AttrsEntry_DoNotUse,
              ::std::string, ::query::Attribute,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::query::Attribute > > parser(&attrs_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "opt.TargOp.AttrsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .opt.TargetNode args = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_args()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opt.TargOp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opt.TargOp)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void TargOp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opt.TargOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string opname = 1;
  if (this->opname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opname().data(), static_cast<int>(this->opname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opt.TargOp.opname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->opname(), output);
  }

  // map<string, .query.Attribute> attrs = 2;
  if (!this->attrs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::query::Attribute >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "opt.TargOp.AttrsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attrs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attrs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::query::Attribute >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::query::Attribute >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TargOp_AttrsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attrs_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<TargOp_AttrsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::query::Attribute >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it) {
        entry.reset(attrs_.NewEntryWrapper(it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .opt.TargetNode args = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->args(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opt.TargOp)
}

::google::protobuf::uint8* TargOp::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opt.TargOp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string opname = 1;
  if (this->opname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->opname().data(), static_cast<int>(this->opname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "opt.TargOp.opname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->opname(), target);
  }

  // map<string, .query.Attribute> attrs = 2;
  if (!this->attrs().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::query::Attribute >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "opt.TargOp.AttrsEntry.key");
      }
    };

    if (false &&
        this->attrs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attrs().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::query::Attribute >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::query::Attribute >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<TargOp_AttrsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attrs_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      ::std::unique_ptr<TargOp_AttrsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::query::Attribute >::const_iterator
          it = this->attrs().begin();
          it != this->attrs().end(); ++it) {
        entry.reset(attrs_.NewEntryWrapper(it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(2, *entry, target);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated .opt.TargetNode args = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->args_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->args(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opt.TargOp)
  return target;
}

size_t TargOp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opt.TargOp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .query.Attribute> attrs = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attrs_size());
  {
    ::std::unique_ptr<TargOp_AttrsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::query::Attribute >::const_iterator
        it = this->attrs().begin();
        it != this->attrs().end(); ++it) {
      entry.reset(attrs_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated .opt.TargetNode args = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->args_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->args(static_cast<int>(i)));
    }
  }

  // string opname = 1;
  if (this->opname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->opname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TargOp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opt.TargOp)
  GOOGLE_DCHECK_NE(&from, this);
  const TargOp* source =
      ::google::protobuf::DynamicCastToGenerated<TargOp>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opt.TargOp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opt.TargOp)
    MergeFrom(*source);
  }
}

void TargOp::MergeFrom(const TargOp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opt.TargOp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attrs_.MergeFrom(from.attrs_);
  args_.MergeFrom(from.args_);
  if (from.opname().size() > 0) {

    opname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.opname_);
  }
}

void TargOp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opt.TargOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargOp::CopyFrom(const TargOp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opt.TargOp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargOp::IsInitialized() const {
  return true;
}

void TargOp::Swap(TargOp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargOp::InternalSwap(TargOp* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  attrs_.Swap(&other->attrs_);
  CastToBase(&args_)->InternalSwap(CastToBase(&other->args_));
  opname_.Swap(&other->opname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata TargOp::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opt_2foptimize_2eproto);
  return ::file_level_metadata_opt_2foptimize_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Conversion::InitAsDefaultInstance() {
  ::opt::_Conversion_default_instance_._instance.get_mutable()->dest_ = const_cast< ::opt::TargetNode*>(
      ::opt::TargetNode::internal_default_instance());
}
class Conversion::HasBitSetters {
 public:
  static const ::opt::TargetNode& dest(const Conversion* msg);
};

const ::opt::TargetNode&
Conversion::HasBitSetters::dest(const Conversion* msg) {
  return *msg->dest_;
}
void Conversion::clear_srcs() {
  srcs_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Conversion::kSrcsFieldNumber;
const int Conversion::kDestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Conversion::Conversion()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opt.Conversion)
}
Conversion::Conversion(const Conversion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      srcs_(from.srcs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dest()) {
    dest_ = new ::opt::TargetNode(*from.dest_);
  } else {
    dest_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:opt.Conversion)
}

void Conversion::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Conversion_opt_2foptimize_2eproto.base);
  dest_ = nullptr;
}

Conversion::~Conversion() {
  // @@protoc_insertion_point(destructor:opt.Conversion)
  SharedDtor();
}

void Conversion::SharedDtor() {
  if (this != internal_default_instance()) delete dest_;
}

void Conversion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Conversion& Conversion::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Conversion_opt_2foptimize_2eproto.base);
  return *internal_default_instance();
}


void Conversion::Clear() {
// @@protoc_insertion_point(message_clear_start:opt.Conversion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srcs_.Clear();
  if (GetArenaNoVirtual() == nullptr && dest_ != nullptr) {
    delete dest_;
  }
  dest_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Conversion::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Conversion*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .query.Node srcs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::query::Node::_InternalParse;
          object = msg->add_srcs();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      // .opt.TargetNode dest = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::opt::TargetNode::_InternalParse;
        object = msg->mutable_dest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Conversion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opt.Conversion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .query.Node srcs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_srcs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .opt.TargetNode dest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opt.Conversion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opt.Conversion)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Conversion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opt.Conversion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .query.Node srcs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->srcs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->srcs(static_cast<int>(i)),
      output);
  }

  // .opt.TargetNode dest = 2;
  if (this->has_dest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::dest(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opt.Conversion)
}

::google::protobuf::uint8* Conversion::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opt.Conversion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .query.Node srcs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->srcs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->srcs(static_cast<int>(i)), target);
  }

  // .opt.TargetNode dest = 2;
  if (this->has_dest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::dest(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opt.Conversion)
  return target;
}

size_t Conversion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opt.Conversion)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .query.Node srcs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->srcs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->srcs(static_cast<int>(i)));
    }
  }

  // .opt.TargetNode dest = 2;
  if (this->has_dest()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dest_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Conversion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opt.Conversion)
  GOOGLE_DCHECK_NE(&from, this);
  const Conversion* source =
      ::google::protobuf::DynamicCastToGenerated<Conversion>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opt.Conversion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opt.Conversion)
    MergeFrom(*source);
  }
}

void Conversion::MergeFrom(const Conversion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opt.Conversion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  srcs_.MergeFrom(from.srcs_);
  if (from.has_dest()) {
    mutable_dest()->::opt::TargetNode::MergeFrom(from.dest());
  }
}

void Conversion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opt.Conversion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Conversion::CopyFrom(const Conversion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opt.Conversion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Conversion::IsInitialized() const {
  return true;
}

void Conversion::Swap(Conversion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Conversion::InternalSwap(Conversion* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&srcs_)->InternalSwap(CastToBase(&other->srcs_));
  swap(dest_, other->dest_);
}

::google::protobuf::Metadata Conversion::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opt_2foptimize_2eproto);
  return ::file_level_metadata_opt_2foptimize_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Optimization::InitAsDefaultInstance() {
}
class Optimization::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Optimization::kConversionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Optimization::Optimization()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:opt.Optimization)
}
Optimization::Optimization(const Optimization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      conversions_(from.conversions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:opt.Optimization)
}

void Optimization::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Optimization_opt_2foptimize_2eproto.base);
}

Optimization::~Optimization() {
  // @@protoc_insertion_point(destructor:opt.Optimization)
  SharedDtor();
}

void Optimization::SharedDtor() {
}

void Optimization::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Optimization& Optimization::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Optimization_opt_2foptimize_2eproto.base);
  return *internal_default_instance();
}


void Optimization::Clear() {
// @@protoc_insertion_point(message_clear_start:opt.Optimization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  conversions_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Optimization::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Optimization*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .opt.Conversion conversions = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::opt::Conversion::_InternalParse;
          object = msg->add_conversions();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Optimization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:opt.Optimization)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .opt.Conversion conversions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_conversions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:opt.Optimization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:opt.Optimization)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Optimization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:opt.Optimization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opt.Conversion conversions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conversions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->conversions(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:opt.Optimization)
}

::google::protobuf::uint8* Optimization::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:opt.Optimization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .opt.Conversion conversions = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->conversions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->conversions(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:opt.Optimization)
  return target;
}

size_t Optimization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:opt.Optimization)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .opt.Conversion conversions = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->conversions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->conversions(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Optimization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:opt.Optimization)
  GOOGLE_DCHECK_NE(&from, this);
  const Optimization* source =
      ::google::protobuf::DynamicCastToGenerated<Optimization>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:opt.Optimization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:opt.Optimization)
    MergeFrom(*source);
  }
}

void Optimization::MergeFrom(const Optimization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:opt.Optimization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  conversions_.MergeFrom(from.conversions_);
}

void Optimization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:opt.Optimization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Optimization::CopyFrom(const Optimization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opt.Optimization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Optimization::IsInitialized() const {
  return true;
}

void Optimization::Swap(Optimization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Optimization::InternalSwap(Optimization* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&conversions_)->InternalSwap(CastToBase(&other->conversions_));
}

::google::protobuf::Metadata Optimization::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_opt_2foptimize_2eproto);
  return ::file_level_metadata_opt_2foptimize_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace opt
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::opt::TargetNode* Arena::CreateMaybeMessage< ::opt::TargetNode >(Arena* arena) {
  return Arena::CreateInternal< ::opt::TargetNode >(arena);
}
template<> PROTOBUF_NOINLINE ::opt::Scalar* Arena::CreateMaybeMessage< ::opt::Scalar >(Arena* arena) {
  return Arena::CreateInternal< ::opt::Scalar >(arena);
}
template<> PROTOBUF_NOINLINE ::opt::TargOp_AttrsEntry_DoNotUse* Arena::CreateMaybeMessage< ::opt::TargOp_AttrsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::opt::TargOp_AttrsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::opt::TargOp* Arena::CreateMaybeMessage< ::opt::TargOp >(Arena* arena) {
  return Arena::CreateInternal< ::opt::TargOp >(arena);
}
template<> PROTOBUF_NOINLINE ::opt::Conversion* Arena::CreateMaybeMessage< ::opt::Conversion >(Arena* arena) {
  return Arena::CreateInternal< ::opt::Conversion >(arena);
}
template<> PROTOBUF_NOINLINE ::opt::Optimization* Arena::CreateMaybeMessage< ::opt::Optimization >(Arena* arena) {
  return Arena::CreateInternal< ::opt::Optimization >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
