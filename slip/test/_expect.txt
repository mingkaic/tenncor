// OPERATE_IO BEHAVIOR
A000 - OperateIO setting empty argument for any op throws error
A001 - OperateIO can only set_args once, second set_args throws error
A002 - OperateIO read_data before set_args throws bad_function_call
A003 - OperateIO get_imms before set_args throws exception

// REGISTRY BEHAVIOR
B000 - get_op for unsupported OPCODE throws
B001 - slip::CAST returns operate_io casting input2 to input1 type
B002 - slip::ABS returns operate_io for the absolute value of input
B003 - slip::NEG returns operate_io for the negative value of input
B004 - slip::NOT returns operate_io for the ! operator of input
B005 - slip::SIN returns operate_io for the std::sin function of input
B006 - slip::COS returns operate_io for the std::cos function of input
B007 - slip::TAN returns operate_io for the std::tan function of input
B008 - slip::EXP returns operate_io for the std::exp function of input
B009 - slip::LOG returns operate_io for the std::log function of input
B010 - slip::SQRT returns operate_io for the std::sqrt function of input
B011 - slip::ROUND returns operate_io for the std::round function of input
B012 - slip::ARGMAX returns operate_io for the index of the max value
		non uint64 dimension values, throws error upon set_args
B013 - slip::RMAX returns operate_io for the max value
		non uint64 dimension values, throws error upon set_args
B014 - slip::RSUM returns operate_io for the sum of the inputs
		non uint64 dimension values, throws error upon set_args
B015 - slip::TRANSPOSE returns operate_io for the transposing input
		across specified permutation (input2), defaults to reverse permutation
B016 - slip::FLIP returns operate_io for flipping input
		on specified dimensions (input2)
		throw error if any dimensions >= input1's rank
B017 - slip::EXPAND returns operate_io for expanding input
		n times (input2) on specified dimension (input3)
		throw error if dimension > input1's rank
B018 - slip::N_ELEMS returns operate_io for obtaining the n_elems of input
		output type is UINT64 regardless of input types
B019 - slip::N_DIMS returns operate_io for obatining the dimension value of input
		on specified dimension (input2)
		output type is UINT64 regardless of input types
		throw error if dimension >= input1's rank

B030 - slip::POW returns operate_io for the input1 to the power of input2
B031 - slip::ADD returns operate_io for the the sum of inputs
B032 - slip::SUB returns operate_io for the the difference of inputs
B033 - slip::MUL returns operate_io for the the product of inputs
B034 - slip::DIV returns operate_io for the the quotient of inputs
B035 - slip::EQ returns operate_io for the == operator of inputs
B036 - slip::NE returns operate_io for the != operator of inputs
B037 - slip::LT returns operate_io for the < operator of inputs
B038 - slip::GT returns operate_io for the > operator of inputs
B039 - slip::UNIF returns operate_io for the uniform_..._distribution(input1, input2)
B040 - slip::BINO returns operate_io for the std::binomial_distribution(input1, input2)
		throws error if type is double or float or if second input has type that is not int
B041 - slip::NORM returns operate_io for the normal_distribution(input1, input2)
		throws bad_function_call if type is integer
B042 - slip::MATMUL returns operate_io for the
		matrix multiplication of the first 2 dimensions of inputs
