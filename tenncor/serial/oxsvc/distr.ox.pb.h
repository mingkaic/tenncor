// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenncor/serial/oxsvc/distr.ox.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "internal/onnx/onnx.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[7]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
namespace distr {
namespace ox {
class GetSaveGraphRequest;
class GetSaveGraphRequestDefaultTypeInternal;
extern GetSaveGraphRequestDefaultTypeInternal _GetSaveGraphRequest_default_instance_;
class GetSaveGraphRequest_IdentifiedEntry_DoNotUse;
class GetSaveGraphRequest_IdentifiedEntry_DoNotUseDefaultTypeInternal;
extern GetSaveGraphRequest_IdentifiedEntry_DoNotUseDefaultTypeInternal _GetSaveGraphRequest_IdentifiedEntry_DoNotUse_default_instance_;
class GetSaveGraphResponse;
class GetSaveGraphResponseDefaultTypeInternal;
extern GetSaveGraphResponseDefaultTypeInternal _GetSaveGraphResponse_default_instance_;
class GetSaveGraphResponse_TopographyEntry_DoNotUse;
class GetSaveGraphResponse_TopographyEntry_DoNotUseDefaultTypeInternal;
extern GetSaveGraphResponse_TopographyEntry_DoNotUseDefaultTypeInternal _GetSaveGraphResponse_TopographyEntry_DoNotUse_default_instance_;
class PostLoadGraphRequest;
class PostLoadGraphRequestDefaultTypeInternal;
extern PostLoadGraphRequestDefaultTypeInternal _PostLoadGraphRequest_default_instance_;
class PostLoadGraphResponse;
class PostLoadGraphResponseDefaultTypeInternal;
extern PostLoadGraphResponseDefaultTypeInternal _PostLoadGraphResponse_default_instance_;
class PostLoadGraphResponse_RootsEntry_DoNotUse;
class PostLoadGraphResponse_RootsEntry_DoNotUseDefaultTypeInternal;
extern PostLoadGraphResponse_RootsEntry_DoNotUseDefaultTypeInternal _PostLoadGraphResponse_RootsEntry_DoNotUse_default_instance_;
}  // namespace ox
}  // namespace distr
PROTOBUF_NAMESPACE_OPEN
template<> ::distr::ox::GetSaveGraphRequest* Arena::CreateMaybeMessage<::distr::ox::GetSaveGraphRequest>(Arena*);
template<> ::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse* Arena::CreateMaybeMessage<::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse>(Arena*);
template<> ::distr::ox::GetSaveGraphResponse* Arena::CreateMaybeMessage<::distr::ox::GetSaveGraphResponse>(Arena*);
template<> ::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse* Arena::CreateMaybeMessage<::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse>(Arena*);
template<> ::distr::ox::PostLoadGraphRequest* Arena::CreateMaybeMessage<::distr::ox::PostLoadGraphRequest>(Arena*);
template<> ::distr::ox::PostLoadGraphResponse* Arena::CreateMaybeMessage<::distr::ox::PostLoadGraphResponse>(Arena*);
template<> ::distr::ox::PostLoadGraphResponse_RootsEntry_DoNotUse* Arena::CreateMaybeMessage<::distr::ox::PostLoadGraphResponse_RootsEntry_DoNotUse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace distr {
namespace ox {

// ===================================================================

class GetSaveGraphRequest_IdentifiedEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetSaveGraphRequest_IdentifiedEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetSaveGraphRequest_IdentifiedEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSaveGraphRequest_IdentifiedEntry_DoNotUse();
  GetSaveGraphRequest_IdentifiedEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetSaveGraphRequest_IdentifiedEntry_DoNotUse& other);
  static const GetSaveGraphRequest_IdentifiedEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSaveGraphRequest_IdentifiedEntry_DoNotUse*>(&_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "distr.ox.GetSaveGraphRequest.IdentifiedEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "distr.ox.GetSaveGraphRequest.IdentifiedEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[0];
  }

  public:
};

// -------------------------------------------------------------------

class GetSaveGraphRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:distr.ox.GetSaveGraphRequest) */ {
 public:
  GetSaveGraphRequest();
  virtual ~GetSaveGraphRequest();

  GetSaveGraphRequest(const GetSaveGraphRequest& from);
  GetSaveGraphRequest(GetSaveGraphRequest&& from) noexcept
    : GetSaveGraphRequest() {
    *this = ::std::move(from);
  }

  inline GetSaveGraphRequest& operator=(const GetSaveGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSaveGraphRequest& operator=(GetSaveGraphRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSaveGraphRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSaveGraphRequest* internal_default_instance() {
    return reinterpret_cast<const GetSaveGraphRequest*>(
               &_GetSaveGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetSaveGraphRequest& a, GetSaveGraphRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSaveGraphRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSaveGraphRequest* New() const final {
    return CreateMaybeMessage<GetSaveGraphRequest>(nullptr);
  }

  GetSaveGraphRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSaveGraphRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSaveGraphRequest& from);
  void MergeFrom(const GetSaveGraphRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSaveGraphRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "distr.ox.GetSaveGraphRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kUuidsFieldNumber = 1,
    kIdentifiedFieldNumber = 2,
    kStopUuidsFieldNumber = 3,
  };
  // repeated string uuids = 1;
  int uuids_size() const;
  private:
  int _internal_uuids_size() const;
  public:
  void clear_uuids();
  const std::string& uuids(int index) const;
  std::string* mutable_uuids(int index);
  void set_uuids(int index, const std::string& value);
  void set_uuids(int index, std::string&& value);
  void set_uuids(int index, const char* value);
  void set_uuids(int index, const char* value, size_t size);
  std::string* add_uuids();
  void add_uuids(const std::string& value);
  void add_uuids(std::string&& value);
  void add_uuids(const char* value);
  void add_uuids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& uuids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_uuids();
  private:
  const std::string& _internal_uuids(int index) const;
  std::string* _internal_add_uuids();
  public:

  // map<string, string> identified = 2;
  int identified_size() const;
  private:
  int _internal_identified_size() const;
  public:
  void clear_identified();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_identified() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_identified();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      identified() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_identified();

  // repeated string stop_uuids = 3;
  int stop_uuids_size() const;
  private:
  int _internal_stop_uuids_size() const;
  public:
  void clear_stop_uuids();
  const std::string& stop_uuids(int index) const;
  std::string* mutable_stop_uuids(int index);
  void set_stop_uuids(int index, const std::string& value);
  void set_stop_uuids(int index, std::string&& value);
  void set_stop_uuids(int index, const char* value);
  void set_stop_uuids(int index, const char* value, size_t size);
  std::string* add_stop_uuids();
  void add_stop_uuids(const std::string& value);
  void add_stop_uuids(std::string&& value);
  void add_stop_uuids(const char* value);
  void add_stop_uuids(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& stop_uuids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_stop_uuids();
  private:
  const std::string& _internal_stop_uuids(int index) const;
  std::string* _internal_add_stop_uuids();
  public:

  // @@protoc_insertion_point(class_scope:distr.ox.GetSaveGraphRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> uuids_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetSaveGraphRequest_IdentifiedEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > identified_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> stop_uuids_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
};
// -------------------------------------------------------------------

class GetSaveGraphResponse_TopographyEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetSaveGraphResponse_TopographyEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<GetSaveGraphResponse_TopographyEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  GetSaveGraphResponse_TopographyEntry_DoNotUse();
  GetSaveGraphResponse_TopographyEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const GetSaveGraphResponse_TopographyEntry_DoNotUse& other);
  static const GetSaveGraphResponse_TopographyEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const GetSaveGraphResponse_TopographyEntry_DoNotUse*>(&_GetSaveGraphResponse_TopographyEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "distr.ox.GetSaveGraphResponse.TopographyEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "distr.ox.GetSaveGraphResponse.TopographyEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class GetSaveGraphResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:distr.ox.GetSaveGraphResponse) */ {
 public:
  GetSaveGraphResponse();
  virtual ~GetSaveGraphResponse();

  GetSaveGraphResponse(const GetSaveGraphResponse& from);
  GetSaveGraphResponse(GetSaveGraphResponse&& from) noexcept
    : GetSaveGraphResponse() {
    *this = ::std::move(from);
  }

  inline GetSaveGraphResponse& operator=(const GetSaveGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSaveGraphResponse& operator=(GetSaveGraphResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetSaveGraphResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetSaveGraphResponse* internal_default_instance() {
    return reinterpret_cast<const GetSaveGraphResponse*>(
               &_GetSaveGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetSaveGraphResponse& a, GetSaveGraphResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetSaveGraphResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetSaveGraphResponse* New() const final {
    return CreateMaybeMessage<GetSaveGraphResponse>(nullptr);
  }

  GetSaveGraphResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetSaveGraphResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetSaveGraphResponse& from);
  void MergeFrom(const GetSaveGraphResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetSaveGraphResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "distr.ox.GetSaveGraphResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kTopographyFieldNumber = 2,
    kGraphFieldNumber = 1,
  };
  // map<string, string> topography = 2;
  int topography_size() const;
  private:
  int _internal_topography_size() const;
  public:
  void clear_topography();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_topography() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_topography();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      topography() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_topography();

  // .onnx.GraphProto graph = 1;
  bool has_graph() const;
  private:
  bool _internal_has_graph() const;
  public:
  void clear_graph();
  const ::onnx::GraphProto& graph() const;
  ::onnx::GraphProto* release_graph();
  ::onnx::GraphProto* mutable_graph();
  void set_allocated_graph(::onnx::GraphProto* graph);
  private:
  const ::onnx::GraphProto& _internal_graph() const;
  ::onnx::GraphProto* _internal_mutable_graph();
  public:

  // @@protoc_insertion_point(class_scope:distr.ox.GetSaveGraphResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      GetSaveGraphResponse_TopographyEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > topography_;
  ::onnx::GraphProto* graph_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
};
// -------------------------------------------------------------------

class PostLoadGraphRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:distr.ox.PostLoadGraphRequest) */ {
 public:
  PostLoadGraphRequest();
  virtual ~PostLoadGraphRequest();

  PostLoadGraphRequest(const PostLoadGraphRequest& from);
  PostLoadGraphRequest(PostLoadGraphRequest&& from) noexcept
    : PostLoadGraphRequest() {
    *this = ::std::move(from);
  }

  inline PostLoadGraphRequest& operator=(const PostLoadGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostLoadGraphRequest& operator=(PostLoadGraphRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PostLoadGraphRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PostLoadGraphRequest* internal_default_instance() {
    return reinterpret_cast<const PostLoadGraphRequest*>(
               &_PostLoadGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(PostLoadGraphRequest& a, PostLoadGraphRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PostLoadGraphRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PostLoadGraphRequest* New() const final {
    return CreateMaybeMessage<PostLoadGraphRequest>(nullptr);
  }

  PostLoadGraphRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PostLoadGraphRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PostLoadGraphRequest& from);
  void MergeFrom(const PostLoadGraphRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PostLoadGraphRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "distr.ox.PostLoadGraphRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRefsFieldNumber = 2,
    kGraphFieldNumber = 1,
  };
  // repeated string refs = 2;
  int refs_size() const;
  private:
  int _internal_refs_size() const;
  public:
  void clear_refs();
  const std::string& refs(int index) const;
  std::string* mutable_refs(int index);
  void set_refs(int index, const std::string& value);
  void set_refs(int index, std::string&& value);
  void set_refs(int index, const char* value);
  void set_refs(int index, const char* value, size_t size);
  std::string* add_refs();
  void add_refs(const std::string& value);
  void add_refs(std::string&& value);
  void add_refs(const char* value);
  void add_refs(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& refs() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_refs();
  private:
  const std::string& _internal_refs(int index) const;
  std::string* _internal_add_refs();
  public:

  // .onnx.GraphProto graph = 1;
  bool has_graph() const;
  private:
  bool _internal_has_graph() const;
  public:
  void clear_graph();
  const ::onnx::GraphProto& graph() const;
  ::onnx::GraphProto* release_graph();
  ::onnx::GraphProto* mutable_graph();
  void set_allocated_graph(::onnx::GraphProto* graph);
  private:
  const ::onnx::GraphProto& _internal_graph() const;
  ::onnx::GraphProto* _internal_mutable_graph();
  public:

  // @@protoc_insertion_point(class_scope:distr.ox.PostLoadGraphRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> refs_;
  ::onnx::GraphProto* graph_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
};
// -------------------------------------------------------------------

class PostLoadGraphResponse_RootsEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<PostLoadGraphResponse_RootsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<PostLoadGraphResponse_RootsEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  PostLoadGraphResponse_RootsEntry_DoNotUse();
  PostLoadGraphResponse_RootsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const PostLoadGraphResponse_RootsEntry_DoNotUse& other);
  static const PostLoadGraphResponse_RootsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PostLoadGraphResponse_RootsEntry_DoNotUse*>(&_PostLoadGraphResponse_RootsEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "distr.ox.PostLoadGraphResponse.RootsEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "distr.ox.PostLoadGraphResponse.RootsEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[5];
  }

  public:
};

// -------------------------------------------------------------------

class PostLoadGraphResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:distr.ox.PostLoadGraphResponse) */ {
 public:
  PostLoadGraphResponse();
  virtual ~PostLoadGraphResponse();

  PostLoadGraphResponse(const PostLoadGraphResponse& from);
  PostLoadGraphResponse(PostLoadGraphResponse&& from) noexcept
    : PostLoadGraphResponse() {
    *this = ::std::move(from);
  }

  inline PostLoadGraphResponse& operator=(const PostLoadGraphResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PostLoadGraphResponse& operator=(PostLoadGraphResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PostLoadGraphResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PostLoadGraphResponse* internal_default_instance() {
    return reinterpret_cast<const PostLoadGraphResponse*>(
               &_PostLoadGraphResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(PostLoadGraphResponse& a, PostLoadGraphResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PostLoadGraphResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PostLoadGraphResponse* New() const final {
    return CreateMaybeMessage<PostLoadGraphResponse>(nullptr);
  }

  PostLoadGraphResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PostLoadGraphResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PostLoadGraphResponse& from);
  void MergeFrom(const PostLoadGraphResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PostLoadGraphResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "distr.ox.PostLoadGraphResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto);
    return ::descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kRootsFieldNumber = 1,
  };
  // map<string, string> roots = 1;
  int roots_size() const;
  private:
  int _internal_roots_size() const;
  public:
  void clear_roots();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_roots() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_roots();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      roots() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_roots();

  // @@protoc_insertion_point(class_scope:distr.ox.PostLoadGraphResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      PostLoadGraphResponse_RootsEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > roots_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetSaveGraphRequest

// repeated string uuids = 1;
inline int GetSaveGraphRequest::_internal_uuids_size() const {
  return uuids_.size();
}
inline int GetSaveGraphRequest::uuids_size() const {
  return _internal_uuids_size();
}
inline void GetSaveGraphRequest::clear_uuids() {
  uuids_.Clear();
}
inline std::string* GetSaveGraphRequest::add_uuids() {
  // @@protoc_insertion_point(field_add_mutable:distr.ox.GetSaveGraphRequest.uuids)
  return _internal_add_uuids();
}
inline const std::string& GetSaveGraphRequest::_internal_uuids(int index) const {
  return uuids_.Get(index);
}
inline const std::string& GetSaveGraphRequest::uuids(int index) const {
  // @@protoc_insertion_point(field_get:distr.ox.GetSaveGraphRequest.uuids)
  return _internal_uuids(index);
}
inline std::string* GetSaveGraphRequest::mutable_uuids(int index) {
  // @@protoc_insertion_point(field_mutable:distr.ox.GetSaveGraphRequest.uuids)
  return uuids_.Mutable(index);
}
inline void GetSaveGraphRequest::set_uuids(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:distr.ox.GetSaveGraphRequest.uuids)
  uuids_.Mutable(index)->assign(value);
}
inline void GetSaveGraphRequest::set_uuids(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:distr.ox.GetSaveGraphRequest.uuids)
  uuids_.Mutable(index)->assign(std::move(value));
}
inline void GetSaveGraphRequest::set_uuids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  uuids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:distr.ox.GetSaveGraphRequest.uuids)
}
inline void GetSaveGraphRequest::set_uuids(int index, const char* value, size_t size) {
  uuids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:distr.ox.GetSaveGraphRequest.uuids)
}
inline std::string* GetSaveGraphRequest::_internal_add_uuids() {
  return uuids_.Add();
}
inline void GetSaveGraphRequest::add_uuids(const std::string& value) {
  uuids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:distr.ox.GetSaveGraphRequest.uuids)
}
inline void GetSaveGraphRequest::add_uuids(std::string&& value) {
  uuids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:distr.ox.GetSaveGraphRequest.uuids)
}
inline void GetSaveGraphRequest::add_uuids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  uuids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:distr.ox.GetSaveGraphRequest.uuids)
}
inline void GetSaveGraphRequest::add_uuids(const char* value, size_t size) {
  uuids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:distr.ox.GetSaveGraphRequest.uuids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetSaveGraphRequest::uuids() const {
  // @@protoc_insertion_point(field_list:distr.ox.GetSaveGraphRequest.uuids)
  return uuids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetSaveGraphRequest::mutable_uuids() {
  // @@protoc_insertion_point(field_mutable_list:distr.ox.GetSaveGraphRequest.uuids)
  return &uuids_;
}

// map<string, string> identified = 2;
inline int GetSaveGraphRequest::_internal_identified_size() const {
  return identified_.size();
}
inline int GetSaveGraphRequest::identified_size() const {
  return _internal_identified_size();
}
inline void GetSaveGraphRequest::clear_identified() {
  identified_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
GetSaveGraphRequest::_internal_identified() const {
  return identified_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
GetSaveGraphRequest::identified() const {
  // @@protoc_insertion_point(field_map:distr.ox.GetSaveGraphRequest.identified)
  return _internal_identified();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
GetSaveGraphRequest::_internal_mutable_identified() {
  return identified_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
GetSaveGraphRequest::mutable_identified() {
  // @@protoc_insertion_point(field_mutable_map:distr.ox.GetSaveGraphRequest.identified)
  return _internal_mutable_identified();
}

// repeated string stop_uuids = 3;
inline int GetSaveGraphRequest::_internal_stop_uuids_size() const {
  return stop_uuids_.size();
}
inline int GetSaveGraphRequest::stop_uuids_size() const {
  return _internal_stop_uuids_size();
}
inline void GetSaveGraphRequest::clear_stop_uuids() {
  stop_uuids_.Clear();
}
inline std::string* GetSaveGraphRequest::add_stop_uuids() {
  // @@protoc_insertion_point(field_add_mutable:distr.ox.GetSaveGraphRequest.stop_uuids)
  return _internal_add_stop_uuids();
}
inline const std::string& GetSaveGraphRequest::_internal_stop_uuids(int index) const {
  return stop_uuids_.Get(index);
}
inline const std::string& GetSaveGraphRequest::stop_uuids(int index) const {
  // @@protoc_insertion_point(field_get:distr.ox.GetSaveGraphRequest.stop_uuids)
  return _internal_stop_uuids(index);
}
inline std::string* GetSaveGraphRequest::mutable_stop_uuids(int index) {
  // @@protoc_insertion_point(field_mutable:distr.ox.GetSaveGraphRequest.stop_uuids)
  return stop_uuids_.Mutable(index);
}
inline void GetSaveGraphRequest::set_stop_uuids(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:distr.ox.GetSaveGraphRequest.stop_uuids)
  stop_uuids_.Mutable(index)->assign(value);
}
inline void GetSaveGraphRequest::set_stop_uuids(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:distr.ox.GetSaveGraphRequest.stop_uuids)
  stop_uuids_.Mutable(index)->assign(std::move(value));
}
inline void GetSaveGraphRequest::set_stop_uuids(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stop_uuids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:distr.ox.GetSaveGraphRequest.stop_uuids)
}
inline void GetSaveGraphRequest::set_stop_uuids(int index, const char* value, size_t size) {
  stop_uuids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:distr.ox.GetSaveGraphRequest.stop_uuids)
}
inline std::string* GetSaveGraphRequest::_internal_add_stop_uuids() {
  return stop_uuids_.Add();
}
inline void GetSaveGraphRequest::add_stop_uuids(const std::string& value) {
  stop_uuids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:distr.ox.GetSaveGraphRequest.stop_uuids)
}
inline void GetSaveGraphRequest::add_stop_uuids(std::string&& value) {
  stop_uuids_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:distr.ox.GetSaveGraphRequest.stop_uuids)
}
inline void GetSaveGraphRequest::add_stop_uuids(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  stop_uuids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:distr.ox.GetSaveGraphRequest.stop_uuids)
}
inline void GetSaveGraphRequest::add_stop_uuids(const char* value, size_t size) {
  stop_uuids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:distr.ox.GetSaveGraphRequest.stop_uuids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
GetSaveGraphRequest::stop_uuids() const {
  // @@protoc_insertion_point(field_list:distr.ox.GetSaveGraphRequest.stop_uuids)
  return stop_uuids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
GetSaveGraphRequest::mutable_stop_uuids() {
  // @@protoc_insertion_point(field_mutable_list:distr.ox.GetSaveGraphRequest.stop_uuids)
  return &stop_uuids_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSaveGraphResponse

// .onnx.GraphProto graph = 1;
inline bool GetSaveGraphResponse::_internal_has_graph() const {
  return this != internal_default_instance() && graph_ != nullptr;
}
inline bool GetSaveGraphResponse::has_graph() const {
  return _internal_has_graph();
}
inline const ::onnx::GraphProto& GetSaveGraphResponse::_internal_graph() const {
  const ::onnx::GraphProto* p = graph_;
  return p != nullptr ? *p : *reinterpret_cast<const ::onnx::GraphProto*>(
      &::onnx::_GraphProto_default_instance_);
}
inline const ::onnx::GraphProto& GetSaveGraphResponse::graph() const {
  // @@protoc_insertion_point(field_get:distr.ox.GetSaveGraphResponse.graph)
  return _internal_graph();
}
inline ::onnx::GraphProto* GetSaveGraphResponse::release_graph() {
  // @@protoc_insertion_point(field_release:distr.ox.GetSaveGraphResponse.graph)
  
  ::onnx::GraphProto* temp = graph_;
  graph_ = nullptr;
  return temp;
}
inline ::onnx::GraphProto* GetSaveGraphResponse::_internal_mutable_graph() {
  
  if (graph_ == nullptr) {
    auto* p = CreateMaybeMessage<::onnx::GraphProto>(GetArenaNoVirtual());
    graph_ = p;
  }
  return graph_;
}
inline ::onnx::GraphProto* GetSaveGraphResponse::mutable_graph() {
  // @@protoc_insertion_point(field_mutable:distr.ox.GetSaveGraphResponse.graph)
  return _internal_mutable_graph();
}
inline void GetSaveGraphResponse::set_allocated_graph(::onnx::GraphProto* graph) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(graph_);
  }
  if (graph) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      graph = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, graph, submessage_arena);
    }
    
  } else {
    
  }
  graph_ = graph;
  // @@protoc_insertion_point(field_set_allocated:distr.ox.GetSaveGraphResponse.graph)
}

// map<string, string> topography = 2;
inline int GetSaveGraphResponse::_internal_topography_size() const {
  return topography_.size();
}
inline int GetSaveGraphResponse::topography_size() const {
  return _internal_topography_size();
}
inline void GetSaveGraphResponse::clear_topography() {
  topography_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
GetSaveGraphResponse::_internal_topography() const {
  return topography_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
GetSaveGraphResponse::topography() const {
  // @@protoc_insertion_point(field_map:distr.ox.GetSaveGraphResponse.topography)
  return _internal_topography();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
GetSaveGraphResponse::_internal_mutable_topography() {
  return topography_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
GetSaveGraphResponse::mutable_topography() {
  // @@protoc_insertion_point(field_mutable_map:distr.ox.GetSaveGraphResponse.topography)
  return _internal_mutable_topography();
}

// -------------------------------------------------------------------

// PostLoadGraphRequest

// .onnx.GraphProto graph = 1;
inline bool PostLoadGraphRequest::_internal_has_graph() const {
  return this != internal_default_instance() && graph_ != nullptr;
}
inline bool PostLoadGraphRequest::has_graph() const {
  return _internal_has_graph();
}
inline const ::onnx::GraphProto& PostLoadGraphRequest::_internal_graph() const {
  const ::onnx::GraphProto* p = graph_;
  return p != nullptr ? *p : *reinterpret_cast<const ::onnx::GraphProto*>(
      &::onnx::_GraphProto_default_instance_);
}
inline const ::onnx::GraphProto& PostLoadGraphRequest::graph() const {
  // @@protoc_insertion_point(field_get:distr.ox.PostLoadGraphRequest.graph)
  return _internal_graph();
}
inline ::onnx::GraphProto* PostLoadGraphRequest::release_graph() {
  // @@protoc_insertion_point(field_release:distr.ox.PostLoadGraphRequest.graph)
  
  ::onnx::GraphProto* temp = graph_;
  graph_ = nullptr;
  return temp;
}
inline ::onnx::GraphProto* PostLoadGraphRequest::_internal_mutable_graph() {
  
  if (graph_ == nullptr) {
    auto* p = CreateMaybeMessage<::onnx::GraphProto>(GetArenaNoVirtual());
    graph_ = p;
  }
  return graph_;
}
inline ::onnx::GraphProto* PostLoadGraphRequest::mutable_graph() {
  // @@protoc_insertion_point(field_mutable:distr.ox.PostLoadGraphRequest.graph)
  return _internal_mutable_graph();
}
inline void PostLoadGraphRequest::set_allocated_graph(::onnx::GraphProto* graph) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(graph_);
  }
  if (graph) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      graph = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, graph, submessage_arena);
    }
    
  } else {
    
  }
  graph_ = graph;
  // @@protoc_insertion_point(field_set_allocated:distr.ox.PostLoadGraphRequest.graph)
}

// repeated string refs = 2;
inline int PostLoadGraphRequest::_internal_refs_size() const {
  return refs_.size();
}
inline int PostLoadGraphRequest::refs_size() const {
  return _internal_refs_size();
}
inline void PostLoadGraphRequest::clear_refs() {
  refs_.Clear();
}
inline std::string* PostLoadGraphRequest::add_refs() {
  // @@protoc_insertion_point(field_add_mutable:distr.ox.PostLoadGraphRequest.refs)
  return _internal_add_refs();
}
inline const std::string& PostLoadGraphRequest::_internal_refs(int index) const {
  return refs_.Get(index);
}
inline const std::string& PostLoadGraphRequest::refs(int index) const {
  // @@protoc_insertion_point(field_get:distr.ox.PostLoadGraphRequest.refs)
  return _internal_refs(index);
}
inline std::string* PostLoadGraphRequest::mutable_refs(int index) {
  // @@protoc_insertion_point(field_mutable:distr.ox.PostLoadGraphRequest.refs)
  return refs_.Mutable(index);
}
inline void PostLoadGraphRequest::set_refs(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:distr.ox.PostLoadGraphRequest.refs)
  refs_.Mutable(index)->assign(value);
}
inline void PostLoadGraphRequest::set_refs(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:distr.ox.PostLoadGraphRequest.refs)
  refs_.Mutable(index)->assign(std::move(value));
}
inline void PostLoadGraphRequest::set_refs(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  refs_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:distr.ox.PostLoadGraphRequest.refs)
}
inline void PostLoadGraphRequest::set_refs(int index, const char* value, size_t size) {
  refs_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:distr.ox.PostLoadGraphRequest.refs)
}
inline std::string* PostLoadGraphRequest::_internal_add_refs() {
  return refs_.Add();
}
inline void PostLoadGraphRequest::add_refs(const std::string& value) {
  refs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:distr.ox.PostLoadGraphRequest.refs)
}
inline void PostLoadGraphRequest::add_refs(std::string&& value) {
  refs_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:distr.ox.PostLoadGraphRequest.refs)
}
inline void PostLoadGraphRequest::add_refs(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  refs_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:distr.ox.PostLoadGraphRequest.refs)
}
inline void PostLoadGraphRequest::add_refs(const char* value, size_t size) {
  refs_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:distr.ox.PostLoadGraphRequest.refs)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
PostLoadGraphRequest::refs() const {
  // @@protoc_insertion_point(field_list:distr.ox.PostLoadGraphRequest.refs)
  return refs_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
PostLoadGraphRequest::mutable_refs() {
  // @@protoc_insertion_point(field_mutable_list:distr.ox.PostLoadGraphRequest.refs)
  return &refs_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PostLoadGraphResponse

// map<string, string> roots = 1;
inline int PostLoadGraphResponse::_internal_roots_size() const {
  return roots_.size();
}
inline int PostLoadGraphResponse::roots_size() const {
  return _internal_roots_size();
}
inline void PostLoadGraphResponse::clear_roots() {
  roots_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
PostLoadGraphResponse::_internal_roots() const {
  return roots_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
PostLoadGraphResponse::roots() const {
  // @@protoc_insertion_point(field_map:distr.ox.PostLoadGraphResponse.roots)
  return _internal_roots();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
PostLoadGraphResponse::_internal_mutable_roots() {
  return roots_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
PostLoadGraphResponse::mutable_roots() {
  // @@protoc_insertion_point(field_mutable_map:distr.ox.PostLoadGraphResponse.roots)
  return _internal_mutable_roots();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ox
}  // namespace distr

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto
