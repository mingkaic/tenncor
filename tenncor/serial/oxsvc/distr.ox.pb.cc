// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenncor/serial/oxsvc/distr.ox.proto

#include "tenncor/serial/oxsvc/distr.ox.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSaveGraphResponse_TopographyEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_internal_2fonnx_2fonnx_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_AttributeProto_internal_2fonnx_2fonnx_2eproto;
namespace distr {
namespace ox {
class GetSaveGraphRequest_IdentifiedEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSaveGraphRequest_IdentifiedEntry_DoNotUse> _instance;
} _GetSaveGraphRequest_IdentifiedEntry_DoNotUse_default_instance_;
class GetSaveGraphRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSaveGraphRequest> _instance;
} _GetSaveGraphRequest_default_instance_;
class GetSaveGraphResponse_TopographyEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSaveGraphResponse_TopographyEntry_DoNotUse> _instance;
} _GetSaveGraphResponse_TopographyEntry_DoNotUse_default_instance_;
class GetSaveGraphResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetSaveGraphResponse> _instance;
} _GetSaveGraphResponse_default_instance_;
class PostLoadGraphRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostLoadGraphRequest> _instance;
} _PostLoadGraphRequest_default_instance_;
class PostLoadGraphResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PostLoadGraphResponse> _instance;
} _PostLoadGraphResponse_default_instance_;
}  // namespace ox
}  // namespace distr
static void InitDefaultsscc_info_GetSaveGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::ox::_GetSaveGraphRequest_default_instance_;
    new (ptr) ::distr::ox::GetSaveGraphRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::ox::GetSaveGraphRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetSaveGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetSaveGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto}, {
      &scc_info_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,}};

static void InitDefaultsscc_info_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::ox::_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_default_instance_;
    new (ptr) ::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse();
  }
  ::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto}, {}};

static void InitDefaultsscc_info_GetSaveGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::ox::_GetSaveGraphResponse_default_instance_;
    new (ptr) ::distr::ox::GetSaveGraphResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::ox::GetSaveGraphResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetSaveGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetSaveGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto}, {
      &scc_info_AttributeProto_internal_2fonnx_2fonnx_2eproto.base,
      &scc_info_GetSaveGraphResponse_TopographyEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,}};

static void InitDefaultsscc_info_GetSaveGraphResponse_TopographyEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::ox::_GetSaveGraphResponse_TopographyEntry_DoNotUse_default_instance_;
    new (ptr) ::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse();
  }
  ::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetSaveGraphResponse_TopographyEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetSaveGraphResponse_TopographyEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto}, {}};

static void InitDefaultsscc_info_PostLoadGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::ox::_PostLoadGraphRequest_default_instance_;
    new (ptr) ::distr::ox::PostLoadGraphRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::ox::PostLoadGraphRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PostLoadGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PostLoadGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto}, {
      &scc_info_AttributeProto_internal_2fonnx_2fonnx_2eproto.base,}};

static void InitDefaultsscc_info_PostLoadGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::ox::_PostLoadGraphResponse_default_instance_;
    new (ptr) ::distr::ox::PostLoadGraphResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::ox::PostLoadGraphResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PostLoadGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PostLoadGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest, uuids_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest, identified_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphRequest, stop_uuids_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse, graph_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::GetSaveGraphResponse, topography_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::ox::PostLoadGraphRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::ox::PostLoadGraphRequest, graph_),
  PROTOBUF_FIELD_OFFSET(::distr::ox::PostLoadGraphRequest, refs_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::ox::PostLoadGraphResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse)},
  { 9, -1, sizeof(::distr::ox::GetSaveGraphRequest)},
  { 17, 24, sizeof(::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse)},
  { 26, -1, sizeof(::distr::ox::GetSaveGraphResponse)},
  { 33, -1, sizeof(::distr::ox::PostLoadGraphRequest)},
  { 40, -1, sizeof(::distr::ox::PostLoadGraphResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::ox::_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::ox::_GetSaveGraphRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::ox::_GetSaveGraphResponse_TopographyEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::ox::_GetSaveGraphResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::ox::_PostLoadGraphRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::ox::_PostLoadGraphResponse_default_instance_),
};

const char descriptor_table_protodef_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n#tenncor/serial/oxsvc/distr.ox.proto\022\010d"
  "istr.ox\032\030internal/onnx/onnx.proto\"\256\001\n\023Ge"
  "tSaveGraphRequest\022\r\n\005uuids\030\001 \003(\t\022A\n\niden"
  "tified\030\002 \003(\0132-.distr.ox.GetSaveGraphRequ"
  "est.IdentifiedEntry\022\022\n\nstop_uuids\030\003 \003(\t\032"
  "1\n\017IdentifiedEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
  "\030\002 \001(\t:\0028\001\"\256\001\n\024GetSaveGraphResponse\022\037\n\005g"
  "raph\030\001 \001(\0132\020.onnx.GraphProto\022B\n\ntopograp"
  "hy\030\002 \003(\0132..distr.ox.GetSaveGraphResponse"
  ".TopographyEntry\0321\n\017TopographyEntry\022\013\n\003k"
  "ey\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"E\n\024PostLoadG"
  "raphRequest\022\037\n\005graph\030\001 \001(\0132\020.onnx.GraphP"
  "roto\022\014\n\004refs\030\002 \003(\t\"\027\n\025PostLoadGraphRespo"
  "nse2\265\001\n\022DistrSerialization\022M\n\014GetSaveGra"
  "ph\022\035.distr.ox.GetSaveGraphRequest\032\036.dist"
  "r.ox.GetSaveGraphResponse\022P\n\rPostLoadGra"
  "ph\022\036.distr.ox.PostLoadGraphRequest\032\037.dis"
  "tr.ox.PostLoadGraphResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_deps[1] = {
  &::descriptor_table_internal_2fonnx_2fonnx_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_sccs[6] = {
  &scc_info_GetSaveGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,
  &scc_info_GetSaveGraphRequest_IdentifiedEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,
  &scc_info_GetSaveGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,
  &scc_info_GetSaveGraphResponse_TopographyEntry_DoNotUse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,
  &scc_info_PostLoadGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,
  &scc_info_PostLoadGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_once;
static bool descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto = {
  &descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_initialized, descriptor_table_protodef_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto, "tenncor/serial/oxsvc/distr.ox.proto", 715,
  &descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_once, descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_sccs, descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto_deps, 6, 1,
  schemas, file_default_instances, TableStruct_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto::offsets,
  file_level_metadata_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto, 6, file_level_enum_descriptors_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto, file_level_service_descriptors_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto), true);
namespace distr {
namespace ox {

// ===================================================================

GetSaveGraphRequest_IdentifiedEntry_DoNotUse::GetSaveGraphRequest_IdentifiedEntry_DoNotUse() {}
GetSaveGraphRequest_IdentifiedEntry_DoNotUse::GetSaveGraphRequest_IdentifiedEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetSaveGraphRequest_IdentifiedEntry_DoNotUse::MergeFrom(const GetSaveGraphRequest_IdentifiedEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetSaveGraphRequest_IdentifiedEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetSaveGraphRequest_IdentifiedEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetSaveGraphRequest::InitAsDefaultInstance() {
}
class GetSaveGraphRequest::_Internal {
 public:
};

GetSaveGraphRequest::GetSaveGraphRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.ox.GetSaveGraphRequest)
}
GetSaveGraphRequest::GetSaveGraphRequest(const GetSaveGraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      uuids_(from.uuids_),
      stop_uuids_(from.stop_uuids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  identified_.MergeFrom(from.identified_);
  // @@protoc_insertion_point(copy_constructor:distr.ox.GetSaveGraphRequest)
}

void GetSaveGraphRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSaveGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
}

GetSaveGraphRequest::~GetSaveGraphRequest() {
  // @@protoc_insertion_point(destructor:distr.ox.GetSaveGraphRequest)
  SharedDtor();
}

void GetSaveGraphRequest::SharedDtor() {
}

void GetSaveGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSaveGraphRequest& GetSaveGraphRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSaveGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
  return *internal_default_instance();
}


void GetSaveGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.ox.GetSaveGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuids_.Clear();
  identified_.Clear();
  stop_uuids_.Clear();
  _internal_metadata_.Clear();
}

const char* GetSaveGraphRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string uuids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uuids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.ox.GetSaveGraphRequest.uuids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // map<string, string> identified = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&identified_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string stop_uuids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_stop_uuids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.ox.GetSaveGraphRequest.stop_uuids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSaveGraphRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.ox.GetSaveGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uuids = 1;
  for (int i = 0, n = this->_internal_uuids_size(); i < n; i++) {
    const auto& s = this->_internal_uuids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.ox.GetSaveGraphRequest.uuids");
    target = stream->WriteString(1, s, target);
  }

  // map<string, string> identified = 2;
  if (!this->_internal_identified().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.ox.GetSaveGraphRequest.IdentifiedEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.ox.GetSaveGraphRequest.IdentifiedEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_identified().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_identified().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_identified().begin();
          it != this->_internal_identified().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetSaveGraphRequest_IdentifiedEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_identified().begin();
          it != this->_internal_identified().end(); ++it) {
        target = GetSaveGraphRequest_IdentifiedEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated string stop_uuids = 3;
  for (int i = 0, n = this->_internal_stop_uuids_size(); i < n; i++) {
    const auto& s = this->_internal_stop_uuids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.ox.GetSaveGraphRequest.stop_uuids");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.ox.GetSaveGraphRequest)
  return target;
}

size_t GetSaveGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.ox.GetSaveGraphRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uuids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uuids_.size());
  for (int i = 0, n = uuids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uuids_.Get(i));
  }

  // map<string, string> identified = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_identified_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_identified().begin();
      it != this->_internal_identified().end(); ++it) {
    total_size += GetSaveGraphRequest_IdentifiedEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated string stop_uuids = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(stop_uuids_.size());
  for (int i = 0, n = stop_uuids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      stop_uuids_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSaveGraphRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.ox.GetSaveGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSaveGraphRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSaveGraphRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.ox.GetSaveGraphRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.ox.GetSaveGraphRequest)
    MergeFrom(*source);
  }
}

void GetSaveGraphRequest::MergeFrom(const GetSaveGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.ox.GetSaveGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uuids_.MergeFrom(from.uuids_);
  identified_.MergeFrom(from.identified_);
  stop_uuids_.MergeFrom(from.stop_uuids_);
}

void GetSaveGraphRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.ox.GetSaveGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSaveGraphRequest::CopyFrom(const GetSaveGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.ox.GetSaveGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSaveGraphRequest::IsInitialized() const {
  return true;
}

void GetSaveGraphRequest::InternalSwap(GetSaveGraphRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuids_.InternalSwap(&other->uuids_);
  identified_.Swap(&other->identified_);
  stop_uuids_.InternalSwap(&other->stop_uuids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSaveGraphRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

GetSaveGraphResponse_TopographyEntry_DoNotUse::GetSaveGraphResponse_TopographyEntry_DoNotUse() {}
GetSaveGraphResponse_TopographyEntry_DoNotUse::GetSaveGraphResponse_TopographyEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void GetSaveGraphResponse_TopographyEntry_DoNotUse::MergeFrom(const GetSaveGraphResponse_TopographyEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata GetSaveGraphResponse_TopographyEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void GetSaveGraphResponse_TopographyEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void GetSaveGraphResponse::InitAsDefaultInstance() {
  ::distr::ox::_GetSaveGraphResponse_default_instance_._instance.get_mutable()->graph_ = const_cast< ::onnx::GraphProto*>(
      ::onnx::GraphProto::internal_default_instance());
}
class GetSaveGraphResponse::_Internal {
 public:
  static const ::onnx::GraphProto& graph(const GetSaveGraphResponse* msg);
};

const ::onnx::GraphProto&
GetSaveGraphResponse::_Internal::graph(const GetSaveGraphResponse* msg) {
  return *msg->graph_;
}
void GetSaveGraphResponse::clear_graph() {
  if (GetArenaNoVirtual() == nullptr && graph_ != nullptr) {
    delete graph_;
  }
  graph_ = nullptr;
}
GetSaveGraphResponse::GetSaveGraphResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.ox.GetSaveGraphResponse)
}
GetSaveGraphResponse::GetSaveGraphResponse(const GetSaveGraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topography_.MergeFrom(from.topography_);
  if (from._internal_has_graph()) {
    graph_ = new ::onnx::GraphProto(*from.graph_);
  } else {
    graph_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:distr.ox.GetSaveGraphResponse)
}

void GetSaveGraphResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetSaveGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
  graph_ = nullptr;
}

GetSaveGraphResponse::~GetSaveGraphResponse() {
  // @@protoc_insertion_point(destructor:distr.ox.GetSaveGraphResponse)
  SharedDtor();
}

void GetSaveGraphResponse::SharedDtor() {
  if (this != internal_default_instance()) delete graph_;
}

void GetSaveGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetSaveGraphResponse& GetSaveGraphResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetSaveGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
  return *internal_default_instance();
}


void GetSaveGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.ox.GetSaveGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topography_.Clear();
  if (GetArenaNoVirtual() == nullptr && graph_ != nullptr) {
    delete graph_;
  }
  graph_ = nullptr;
  _internal_metadata_.Clear();
}

const char* GetSaveGraphResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .onnx.GraphProto graph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_graph(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // map<string, string> topography = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&topography_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetSaveGraphResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.ox.GetSaveGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .onnx.GraphProto graph = 1;
  if (this->has_graph()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::graph(this), target, stream);
  }

  // map<string, string> topography = 2;
  if (!this->_internal_topography().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.ox.GetSaveGraphResponse.TopographyEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.ox.GetSaveGraphResponse.TopographyEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_topography().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_topography().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_topography().begin();
          it != this->_internal_topography().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = GetSaveGraphResponse_TopographyEntry_DoNotUse::Funcs::InternalSerialize(2, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_topography().begin();
          it != this->_internal_topography().end(); ++it) {
        target = GetSaveGraphResponse_TopographyEntry_DoNotUse::Funcs::InternalSerialize(2, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.ox.GetSaveGraphResponse)
  return target;
}

size_t GetSaveGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.ox.GetSaveGraphResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> topography = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_topography_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_topography().begin();
      it != this->_internal_topography().end(); ++it) {
    total_size += GetSaveGraphResponse_TopographyEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // .onnx.GraphProto graph = 1;
  if (this->has_graph()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *graph_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetSaveGraphResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.ox.GetSaveGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetSaveGraphResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetSaveGraphResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.ox.GetSaveGraphResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.ox.GetSaveGraphResponse)
    MergeFrom(*source);
  }
}

void GetSaveGraphResponse::MergeFrom(const GetSaveGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.ox.GetSaveGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  topography_.MergeFrom(from.topography_);
  if (from.has_graph()) {
    _internal_mutable_graph()->::onnx::GraphProto::MergeFrom(from._internal_graph());
  }
}

void GetSaveGraphResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.ox.GetSaveGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetSaveGraphResponse::CopyFrom(const GetSaveGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.ox.GetSaveGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSaveGraphResponse::IsInitialized() const {
  return true;
}

void GetSaveGraphResponse::InternalSwap(GetSaveGraphResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  topography_.Swap(&other->topography_);
  swap(graph_, other->graph_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSaveGraphResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PostLoadGraphRequest::InitAsDefaultInstance() {
  ::distr::ox::_PostLoadGraphRequest_default_instance_._instance.get_mutable()->graph_ = const_cast< ::onnx::GraphProto*>(
      ::onnx::GraphProto::internal_default_instance());
}
class PostLoadGraphRequest::_Internal {
 public:
  static const ::onnx::GraphProto& graph(const PostLoadGraphRequest* msg);
};

const ::onnx::GraphProto&
PostLoadGraphRequest::_Internal::graph(const PostLoadGraphRequest* msg) {
  return *msg->graph_;
}
void PostLoadGraphRequest::clear_graph() {
  if (GetArenaNoVirtual() == nullptr && graph_ != nullptr) {
    delete graph_;
  }
  graph_ = nullptr;
}
PostLoadGraphRequest::PostLoadGraphRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.ox.PostLoadGraphRequest)
}
PostLoadGraphRequest::PostLoadGraphRequest(const PostLoadGraphRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      refs_(from.refs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_graph()) {
    graph_ = new ::onnx::GraphProto(*from.graph_);
  } else {
    graph_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:distr.ox.PostLoadGraphRequest)
}

void PostLoadGraphRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PostLoadGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
  graph_ = nullptr;
}

PostLoadGraphRequest::~PostLoadGraphRequest() {
  // @@protoc_insertion_point(destructor:distr.ox.PostLoadGraphRequest)
  SharedDtor();
}

void PostLoadGraphRequest::SharedDtor() {
  if (this != internal_default_instance()) delete graph_;
}

void PostLoadGraphRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostLoadGraphRequest& PostLoadGraphRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostLoadGraphRequest_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
  return *internal_default_instance();
}


void PostLoadGraphRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.ox.PostLoadGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  refs_.Clear();
  if (GetArenaNoVirtual() == nullptr && graph_ != nullptr) {
    delete graph_;
  }
  graph_ = nullptr;
  _internal_metadata_.Clear();
}

const char* PostLoadGraphRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .onnx.GraphProto graph = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_graph(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string refs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_refs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.ox.PostLoadGraphRequest.refs"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostLoadGraphRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.ox.PostLoadGraphRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .onnx.GraphProto graph = 1;
  if (this->has_graph()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::graph(this), target, stream);
  }

  // repeated string refs = 2;
  for (int i = 0, n = this->_internal_refs_size(); i < n; i++) {
    const auto& s = this->_internal_refs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.ox.PostLoadGraphRequest.refs");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.ox.PostLoadGraphRequest)
  return target;
}

size_t PostLoadGraphRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.ox.PostLoadGraphRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string refs = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(refs_.size());
  for (int i = 0, n = refs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      refs_.Get(i));
  }

  // .onnx.GraphProto graph = 1;
  if (this->has_graph()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *graph_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostLoadGraphRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.ox.PostLoadGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PostLoadGraphRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostLoadGraphRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.ox.PostLoadGraphRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.ox.PostLoadGraphRequest)
    MergeFrom(*source);
  }
}

void PostLoadGraphRequest::MergeFrom(const PostLoadGraphRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.ox.PostLoadGraphRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  refs_.MergeFrom(from.refs_);
  if (from.has_graph()) {
    _internal_mutable_graph()->::onnx::GraphProto::MergeFrom(from._internal_graph());
  }
}

void PostLoadGraphRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.ox.PostLoadGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostLoadGraphRequest::CopyFrom(const PostLoadGraphRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.ox.PostLoadGraphRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostLoadGraphRequest::IsInitialized() const {
  return true;
}

void PostLoadGraphRequest::InternalSwap(PostLoadGraphRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  refs_.InternalSwap(&other->refs_);
  swap(graph_, other->graph_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostLoadGraphRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PostLoadGraphResponse::InitAsDefaultInstance() {
}
class PostLoadGraphResponse::_Internal {
 public:
};

PostLoadGraphResponse::PostLoadGraphResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.ox.PostLoadGraphResponse)
}
PostLoadGraphResponse::PostLoadGraphResponse(const PostLoadGraphResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:distr.ox.PostLoadGraphResponse)
}

void PostLoadGraphResponse::SharedCtor() {
}

PostLoadGraphResponse::~PostLoadGraphResponse() {
  // @@protoc_insertion_point(destructor:distr.ox.PostLoadGraphResponse)
  SharedDtor();
}

void PostLoadGraphResponse::SharedDtor() {
}

void PostLoadGraphResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PostLoadGraphResponse& PostLoadGraphResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PostLoadGraphResponse_tenncor_2fserial_2foxsvc_2fdistr_2eox_2eproto.base);
  return *internal_default_instance();
}


void PostLoadGraphResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.ox.PostLoadGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* PostLoadGraphResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PostLoadGraphResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.ox.PostLoadGraphResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.ox.PostLoadGraphResponse)
  return target;
}

size_t PostLoadGraphResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.ox.PostLoadGraphResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PostLoadGraphResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.ox.PostLoadGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PostLoadGraphResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PostLoadGraphResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.ox.PostLoadGraphResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.ox.PostLoadGraphResponse)
    MergeFrom(*source);
  }
}

void PostLoadGraphResponse::MergeFrom(const PostLoadGraphResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.ox.PostLoadGraphResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PostLoadGraphResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.ox.PostLoadGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PostLoadGraphResponse::CopyFrom(const PostLoadGraphResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.ox.PostLoadGraphResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PostLoadGraphResponse::IsInitialized() const {
  return true;
}

void PostLoadGraphResponse::InternalSwap(PostLoadGraphResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PostLoadGraphResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ox
}  // namespace distr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse* Arena::CreateMaybeMessage< ::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::ox::GetSaveGraphRequest_IdentifiedEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::ox::GetSaveGraphRequest* Arena::CreateMaybeMessage< ::distr::ox::GetSaveGraphRequest >(Arena* arena) {
  return Arena::CreateInternal< ::distr::ox::GetSaveGraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse* Arena::CreateMaybeMessage< ::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::ox::GetSaveGraphResponse_TopographyEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::ox::GetSaveGraphResponse* Arena::CreateMaybeMessage< ::distr::ox::GetSaveGraphResponse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::ox::GetSaveGraphResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::ox::PostLoadGraphRequest* Arena::CreateMaybeMessage< ::distr::ox::PostLoadGraphRequest >(Arena* arena) {
  return Arena::CreateInternal< ::distr::ox::PostLoadGraphRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::ox::PostLoadGraphResponse* Arena::CreateMaybeMessage< ::distr::ox::PostLoadGraphResponse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::ox::PostLoadGraphResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
