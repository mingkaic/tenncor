// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenncor/eteq/opsvc/distr.op.proto

#include "tenncor/eteq/opsvc/distr.op.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateDeriveRequest_RootGradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateDeriveResponse_GradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListReachableResponse_SrcsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto;
namespace distr {
namespace op {
class NodeDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NodeData> _instance;
} _NodeData_default_instance_;
class ReachablesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Reachables> _instance;
} _Reachables_default_instance_;
class GetDataRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDataRequest> _instance;
} _GetDataRequest_default_instance_;
class ListReachableRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListReachableRequest> _instance;
} _ListReachableRequest_default_instance_;
class ListReachableResponse_SrcsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListReachableResponse_SrcsEntry_DoNotUse> _instance;
} _ListReachableResponse_SrcsEntry_DoNotUse_default_instance_;
class ListReachableResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListReachableResponse> _instance;
} _ListReachableResponse_default_instance_;
class CreateDeriveRequest_RootGradsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateDeriveRequest_RootGradsEntry_DoNotUse> _instance;
} _CreateDeriveRequest_RootGradsEntry_DoNotUse_default_instance_;
class CreateDeriveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateDeriveRequest> _instance;
} _CreateDeriveRequest_default_instance_;
class CreateDeriveResponse_GradsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateDeriveResponse_GradsEntry_DoNotUse> _instance;
} _CreateDeriveResponse_GradsEntry_DoNotUse_default_instance_;
class CreateDeriveResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateDeriveResponse> _instance;
} _CreateDeriveResponse_default_instance_;
}  // namespace op
}  // namespace distr
static void InitDefaultsscc_info_CreateDeriveRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_CreateDeriveRequest_default_instance_;
    new (ptr) ::distr::op::CreateDeriveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::CreateDeriveRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateDeriveRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateDeriveRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {
      &scc_info_CreateDeriveRequest_RootGradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,}};

static void InitDefaultsscc_info_CreateDeriveRequest_RootGradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_CreateDeriveRequest_RootGradsEntry_DoNotUse_default_instance_;
    new (ptr) ::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse();
  }
  ::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateDeriveRequest_RootGradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateDeriveRequest_RootGradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {
      &scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base,}};

static void InitDefaultsscc_info_CreateDeriveResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_CreateDeriveResponse_default_instance_;
    new (ptr) ::distr::op::CreateDeriveResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::CreateDeriveResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateDeriveResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateDeriveResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {
      &scc_info_CreateDeriveResponse_GradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,}};

static void InitDefaultsscc_info_CreateDeriveResponse_GradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_CreateDeriveResponse_GradsEntry_DoNotUse_default_instance_;
    new (ptr) ::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse();
  }
  ::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateDeriveResponse_GradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateDeriveResponse_GradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {}};

static void InitDefaultsscc_info_GetDataRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_GetDataRequest_default_instance_;
    new (ptr) ::distr::op::GetDataRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::GetDataRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDataRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDataRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {}};

static void InitDefaultsscc_info_ListReachableRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_ListReachableRequest_default_instance_;
    new (ptr) ::distr::op::ListReachableRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::ListReachableRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListReachableRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListReachableRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {}};

static void InitDefaultsscc_info_ListReachableResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_ListReachableResponse_default_instance_;
    new (ptr) ::distr::op::ListReachableResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::ListReachableResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListReachableResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListReachableResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {
      &scc_info_ListReachableResponse_SrcsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,}};

static void InitDefaultsscc_info_ListReachableResponse_SrcsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_ListReachableResponse_SrcsEntry_DoNotUse_default_instance_;
    new (ptr) ::distr::op::ListReachableResponse_SrcsEntry_DoNotUse();
  }
  ::distr::op::ListReachableResponse_SrcsEntry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListReachableResponse_SrcsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListReachableResponse_SrcsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {
      &scc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,}};

static void InitDefaultsscc_info_NodeData_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_NodeData_default_instance_;
    new (ptr) ::distr::op::NodeData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::NodeData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeData_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NodeData_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {}};

static void InitDefaultsscc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::op::_Reachables_default_instance_;
    new (ptr) ::distr::op::Reachables();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::op::Reachables::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::NodeData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::NodeData, uuid_),
  PROTOBUF_FIELD_OFFSET(::distr::op::NodeData, data_),
  PROTOBUF_FIELD_OFFSET(::distr::op::NodeData, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::Reachables, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::Reachables, reachables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::GetDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::GetDataRequest, uuids_),
  PROTOBUF_FIELD_OFFSET(::distr::op::GetDataRequest, ignored_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableRequest, srcs_),
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableRequest, dests_),
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableResponse_SrcsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableResponse_SrcsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableResponse_SrcsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableResponse_SrcsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::ListReachableResponse, srcs_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest, root_grads_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest, targets_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveRequest, root_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::op::CreateDeriveResponse, grads_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::distr::op::NodeData)},
  { 8, -1, sizeof(::distr::op::Reachables)},
  { 14, -1, sizeof(::distr::op::GetDataRequest)},
  { 21, -1, sizeof(::distr::op::ListReachableRequest)},
  { 28, 35, sizeof(::distr::op::ListReachableResponse_SrcsEntry_DoNotUse)},
  { 37, -1, sizeof(::distr::op::ListReachableResponse)},
  { 43, 50, sizeof(::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse)},
  { 52, -1, sizeof(::distr::op::CreateDeriveRequest)},
  { 60, 67, sizeof(::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse)},
  { 69, -1, sizeof(::distr::op::CreateDeriveResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_NodeData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_Reachables_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_GetDataRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_ListReachableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_ListReachableResponse_SrcsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_ListReachableResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_CreateDeriveRequest_RootGradsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_CreateDeriveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_CreateDeriveResponse_GradsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::op::_CreateDeriveResponse_default_instance_),
};

const char descriptor_table_protodef_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n!tenncor/eteq/opsvc/distr.op.proto\022\010dis"
  "tr.op\032\"tenncor/distr/iosvc/distr.io.prot"
  "o\"7\n\010NodeData\022\014\n\004uuid\030\001 \001(\t\022\014\n\004data\030\002 \003("
  "\001\022\017\n\007version\030\003 \001(\003\" \n\nReachables\022\022\n\nreac"
  "hables\030\001 \003(\t\"0\n\016GetDataRequest\022\r\n\005uuids\030"
  "\001 \003(\t\022\017\n\007ignored\030\002 \003(\t\"3\n\024ListReachableR"
  "equest\022\014\n\004srcs\030\001 \003(\t\022\r\n\005dests\030\002 \003(\t\"\223\001\n\025"
  "ListReachableResponse\0227\n\004srcs\030\001 \003(\0132).di"
  "str.op.ListReachableResponse.SrcsEntry\032A"
  "\n\tSrcsEntry\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002 \001(\0132"
  "\024.distr.op.Reachables:\0028\001\"\274\001\n\023CreateDeri"
  "veRequest\022@\n\nroot_grads\030\001 \003(\0132,.distr.op"
  ".CreateDeriveRequest.RootGradsEntry\022\017\n\007t"
  "argets\030\002 \003(\t\022\014\n\004root\030\003 \001(\t\032D\n\016RootGradsE"
  "ntry\022\013\n\003key\030\001 \001(\t\022!\n\005value\030\002 \001(\0132\022.distr"
  ".io.NodeMeta:\0028\001\"~\n\024CreateDeriveResponse"
  "\0228\n\005grads\030\001 \003(\0132).distr.op.CreateDeriveR"
  "esponse.GradsEntry\032,\n\nGradsEntry\022\013\n\003key\030"
  "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\0012\354\001\n\016DistrOperat"
  "ion\0229\n\007GetData\022\030.distr.op.GetDataRequest"
  "\032\022.distr.op.NodeData0\001\022P\n\rListReachable\022"
  "\036.distr.op.ListReachableRequest\032\037.distr."
  "op.ListReachableResponse\022M\n\014CreateDerive"
  "\022\035.distr.op.CreateDeriveRequest\032\036.distr."
  "op.CreateDeriveResponseb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_deps[1] = {
  &::descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_sccs[10] = {
  &scc_info_CreateDeriveRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_CreateDeriveRequest_RootGradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_CreateDeriveResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_CreateDeriveResponse_GradsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_GetDataRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_ListReachableRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_ListReachableResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_ListReachableResponse_SrcsEntry_DoNotUse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_NodeData_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
  &scc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_once;
static bool descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto = {
  &descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_initialized, descriptor_table_protodef_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto, "tenncor/eteq/opsvc/distr.op.proto", 991,
  &descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_once, descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_sccs, descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto_deps, 10, 1,
  schemas, file_default_instances, TableStruct_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto::offsets,
  file_level_metadata_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto, 10, file_level_enum_descriptors_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto, file_level_service_descriptors_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto), true);
namespace distr {
namespace op {

// ===================================================================

void NodeData::InitAsDefaultInstance() {
}
class NodeData::_Internal {
 public:
};

NodeData::NodeData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.NodeData)
}
NodeData::NodeData(const NodeData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      data_(from.data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  version_ = from.version_;
  // @@protoc_insertion_point(copy_constructor:distr.op.NodeData)
}

void NodeData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NodeData_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_ = PROTOBUF_LONGLONG(0);
}

NodeData::~NodeData() {
  // @@protoc_insertion_point(destructor:distr.op.NodeData)
  SharedDtor();
}

void NodeData::SharedDtor() {
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NodeData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeData& NodeData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NodeData_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void NodeData::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.NodeData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  version_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* NodeData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string uuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.NodeData.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_data(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_data(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int64 version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.NodeData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.NodeData.uuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uuid(), target);
  }

  // repeated double data = 2;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_data(), target);
  }

  // int64 version = 3;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.NodeData)
  return target;
}

size_t NodeData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.NodeData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double data = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_data_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _data_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string uuid = 1;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // int64 version = 3;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.NodeData)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.NodeData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.NodeData)
    MergeFrom(*source);
  }
}

void NodeData::MergeFrom(const NodeData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.NodeData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
}

void NodeData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.NodeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeData::CopyFrom(const NodeData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.NodeData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeData::IsInitialized() const {
  return true;
}

void NodeData::InternalSwap(NodeData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(version_, other->version_);
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Reachables::InitAsDefaultInstance() {
}
class Reachables::_Internal {
 public:
};

Reachables::Reachables()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.Reachables)
}
Reachables::Reachables(const Reachables& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      reachables_(from.reachables_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:distr.op.Reachables)
}

void Reachables::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
}

Reachables::~Reachables() {
  // @@protoc_insertion_point(destructor:distr.op.Reachables)
  SharedDtor();
}

void Reachables::SharedDtor() {
}

void Reachables::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Reachables& Reachables::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Reachables_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void Reachables::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.Reachables)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  reachables_.Clear();
  _internal_metadata_.Clear();
}

const char* Reachables::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string reachables = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_reachables();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.Reachables.reachables"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Reachables::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.Reachables)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string reachables = 1;
  for (int i = 0, n = this->_internal_reachables_size(); i < n; i++) {
    const auto& s = this->_internal_reachables(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.Reachables.reachables");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.Reachables)
  return target;
}

size_t Reachables::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.Reachables)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string reachables = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(reachables_.size());
  for (int i = 0, n = reachables_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      reachables_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Reachables::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.Reachables)
  GOOGLE_DCHECK_NE(&from, this);
  const Reachables* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Reachables>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.Reachables)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.Reachables)
    MergeFrom(*source);
  }
}

void Reachables::MergeFrom(const Reachables& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.Reachables)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  reachables_.MergeFrom(from.reachables_);
}

void Reachables::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.Reachables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reachables::CopyFrom(const Reachables& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.Reachables)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reachables::IsInitialized() const {
  return true;
}

void Reachables::InternalSwap(Reachables* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  reachables_.InternalSwap(&other->reachables_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Reachables::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDataRequest::InitAsDefaultInstance() {
}
class GetDataRequest::_Internal {
 public:
};

GetDataRequest::GetDataRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.GetDataRequest)
}
GetDataRequest::GetDataRequest(const GetDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      uuids_(from.uuids_),
      ignored_(from.ignored_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:distr.op.GetDataRequest)
}

void GetDataRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDataRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
}

GetDataRequest::~GetDataRequest() {
  // @@protoc_insertion_point(destructor:distr.op.GetDataRequest)
  SharedDtor();
}

void GetDataRequest::SharedDtor() {
}

void GetDataRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDataRequest& GetDataRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDataRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void GetDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.GetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuids_.Clear();
  ignored_.Clear();
  _internal_metadata_.Clear();
}

const char* GetDataRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string uuids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uuids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.GetDataRequest.uuids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string ignored = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ignored();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.GetDataRequest.ignored"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDataRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.GetDataRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uuids = 1;
  for (int i = 0, n = this->_internal_uuids_size(); i < n; i++) {
    const auto& s = this->_internal_uuids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.GetDataRequest.uuids");
    target = stream->WriteString(1, s, target);
  }

  // repeated string ignored = 2;
  for (int i = 0, n = this->_internal_ignored_size(); i < n; i++) {
    const auto& s = this->_internal_ignored(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.GetDataRequest.ignored");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.GetDataRequest)
  return target;
}

size_t GetDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.GetDataRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uuids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uuids_.size());
  for (int i = 0, n = uuids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uuids_.Get(i));
  }

  // repeated string ignored = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(ignored_.size());
  for (int i = 0, n = ignored_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      ignored_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDataRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.GetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDataRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDataRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.GetDataRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.GetDataRequest)
    MergeFrom(*source);
  }
}

void GetDataRequest::MergeFrom(const GetDataRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.GetDataRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uuids_.MergeFrom(from.uuids_);
  ignored_.MergeFrom(from.ignored_);
}

void GetDataRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.GetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDataRequest::CopyFrom(const GetDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.GetDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataRequest::IsInitialized() const {
  return true;
}

void GetDataRequest::InternalSwap(GetDataRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuids_.InternalSwap(&other->uuids_);
  ignored_.InternalSwap(&other->ignored_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDataRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListReachableRequest::InitAsDefaultInstance() {
}
class ListReachableRequest::_Internal {
 public:
};

ListReachableRequest::ListReachableRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.ListReachableRequest)
}
ListReachableRequest::ListReachableRequest(const ListReachableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      srcs_(from.srcs_),
      dests_(from.dests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:distr.op.ListReachableRequest)
}

void ListReachableRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListReachableRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
}

ListReachableRequest::~ListReachableRequest() {
  // @@protoc_insertion_point(destructor:distr.op.ListReachableRequest)
  SharedDtor();
}

void ListReachableRequest::SharedDtor() {
}

void ListReachableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListReachableRequest& ListReachableRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListReachableRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void ListReachableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.ListReachableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srcs_.Clear();
  dests_.Clear();
  _internal_metadata_.Clear();
}

const char* ListReachableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string srcs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_srcs();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.ListReachableRequest.srcs"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string dests = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_dests();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.ListReachableRequest.dests"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListReachableRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.ListReachableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string srcs = 1;
  for (int i = 0, n = this->_internal_srcs_size(); i < n; i++) {
    const auto& s = this->_internal_srcs(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.ListReachableRequest.srcs");
    target = stream->WriteString(1, s, target);
  }

  // repeated string dests = 2;
  for (int i = 0, n = this->_internal_dests_size(); i < n; i++) {
    const auto& s = this->_internal_dests(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.ListReachableRequest.dests");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.ListReachableRequest)
  return target;
}

size_t ListReachableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.ListReachableRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string srcs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(srcs_.size());
  for (int i = 0, n = srcs_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      srcs_.Get(i));
  }

  // repeated string dests = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(dests_.size());
  for (int i = 0, n = dests_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      dests_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListReachableRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.ListReachableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReachableRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListReachableRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.ListReachableRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.ListReachableRequest)
    MergeFrom(*source);
  }
}

void ListReachableRequest::MergeFrom(const ListReachableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.ListReachableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  srcs_.MergeFrom(from.srcs_);
  dests_.MergeFrom(from.dests_);
}

void ListReachableRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.ListReachableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReachableRequest::CopyFrom(const ListReachableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.ListReachableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReachableRequest::IsInitialized() const {
  return true;
}

void ListReachableRequest::InternalSwap(ListReachableRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  srcs_.InternalSwap(&other->srcs_);
  dests_.InternalSwap(&other->dests_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListReachableRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

ListReachableResponse_SrcsEntry_DoNotUse::ListReachableResponse_SrcsEntry_DoNotUse() {}
ListReachableResponse_SrcsEntry_DoNotUse::ListReachableResponse_SrcsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void ListReachableResponse_SrcsEntry_DoNotUse::MergeFrom(const ListReachableResponse_SrcsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata ListReachableResponse_SrcsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void ListReachableResponse_SrcsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void ListReachableResponse::InitAsDefaultInstance() {
}
class ListReachableResponse::_Internal {
 public:
};

ListReachableResponse::ListReachableResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.ListReachableResponse)
}
ListReachableResponse::ListReachableResponse(const ListReachableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  srcs_.MergeFrom(from.srcs_);
  // @@protoc_insertion_point(copy_constructor:distr.op.ListReachableResponse)
}

void ListReachableResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListReachableResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
}

ListReachableResponse::~ListReachableResponse() {
  // @@protoc_insertion_point(destructor:distr.op.ListReachableResponse)
  SharedDtor();
}

void ListReachableResponse::SharedDtor() {
}

void ListReachableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListReachableResponse& ListReachableResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListReachableResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void ListReachableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.ListReachableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  srcs_.Clear();
  _internal_metadata_.Clear();
}

const char* ListReachableResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .distr.op.Reachables> srcs = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&srcs_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListReachableResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.ListReachableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .distr.op.Reachables> srcs = 1;
  if (!this->_internal_srcs().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::op::Reachables >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.op.ListReachableResponse.SrcsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_srcs().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_srcs().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::op::Reachables >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::op::Reachables >::const_iterator
          it = this->_internal_srcs().begin();
          it != this->_internal_srcs().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = ListReachableResponse_SrcsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::op::Reachables >::const_iterator
          it = this->_internal_srcs().begin();
          it != this->_internal_srcs().end(); ++it) {
        target = ListReachableResponse_SrcsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.ListReachableResponse)
  return target;
}

size_t ListReachableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.ListReachableResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .distr.op.Reachables> srcs = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_srcs_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::op::Reachables >::const_iterator
      it = this->_internal_srcs().begin();
      it != this->_internal_srcs().end(); ++it) {
    total_size += ListReachableResponse_SrcsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListReachableResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.ListReachableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListReachableResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListReachableResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.ListReachableResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.ListReachableResponse)
    MergeFrom(*source);
  }
}

void ListReachableResponse::MergeFrom(const ListReachableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.ListReachableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  srcs_.MergeFrom(from.srcs_);
}

void ListReachableResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.ListReachableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListReachableResponse::CopyFrom(const ListReachableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.ListReachableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListReachableResponse::IsInitialized() const {
  return true;
}

void ListReachableResponse::InternalSwap(ListReachableResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  srcs_.Swap(&other->srcs_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListReachableResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CreateDeriveRequest_RootGradsEntry_DoNotUse::CreateDeriveRequest_RootGradsEntry_DoNotUse() {}
CreateDeriveRequest_RootGradsEntry_DoNotUse::CreateDeriveRequest_RootGradsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CreateDeriveRequest_RootGradsEntry_DoNotUse::MergeFrom(const CreateDeriveRequest_RootGradsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CreateDeriveRequest_RootGradsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CreateDeriveRequest_RootGradsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CreateDeriveRequest::InitAsDefaultInstance() {
}
class CreateDeriveRequest::_Internal {
 public:
};

void CreateDeriveRequest::clear_root_grads() {
  root_grads_.Clear();
}
CreateDeriveRequest::CreateDeriveRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.CreateDeriveRequest)
}
CreateDeriveRequest::CreateDeriveRequest(const CreateDeriveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      targets_(from.targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  root_grads_.MergeFrom(from.root_grads_);
  root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_root().empty()) {
    root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.root_);
  }
  // @@protoc_insertion_point(copy_constructor:distr.op.CreateDeriveRequest)
}

void CreateDeriveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateDeriveRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  root_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateDeriveRequest::~CreateDeriveRequest() {
  // @@protoc_insertion_point(destructor:distr.op.CreateDeriveRequest)
  SharedDtor();
}

void CreateDeriveRequest::SharedDtor() {
  root_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateDeriveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDeriveRequest& CreateDeriveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateDeriveRequest_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void CreateDeriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.CreateDeriveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  root_grads_.Clear();
  targets_.Clear();
  root_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* CreateDeriveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, .distr.io.NodeMeta> root_grads = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&root_grads_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated string targets = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_targets();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.CreateDeriveRequest.targets"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string root = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_root();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.op.CreateDeriveRequest.root"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDeriveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.CreateDeriveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .distr.io.NodeMeta> root_grads = 1;
  if (!this->_internal_root_grads().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::io::NodeMeta >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.op.CreateDeriveRequest.RootGradsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_root_grads().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_root_grads().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::io::NodeMeta >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::io::NodeMeta >::const_iterator
          it = this->_internal_root_grads().begin();
          it != this->_internal_root_grads().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CreateDeriveRequest_RootGradsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::io::NodeMeta >::const_iterator
          it = this->_internal_root_grads().begin();
          it != this->_internal_root_grads().end(); ++it) {
        target = CreateDeriveRequest_RootGradsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  // repeated string targets = 2;
  for (int i = 0, n = this->_internal_targets_size(); i < n; i++) {
    const auto& s = this->_internal_targets(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.CreateDeriveRequest.targets");
    target = stream->WriteString(2, s, target);
  }

  // string root = 3;
  if (this->root().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_root().data(), static_cast<int>(this->_internal_root().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.op.CreateDeriveRequest.root");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_root(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.CreateDeriveRequest)
  return target;
}

size_t CreateDeriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.CreateDeriveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .distr.io.NodeMeta> root_grads = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_root_grads_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::distr::io::NodeMeta >::const_iterator
      it = this->_internal_root_grads().begin();
      it != this->_internal_root_grads().end(); ++it) {
    total_size += CreateDeriveRequest_RootGradsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated string targets = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(targets_.size());
  for (int i = 0, n = targets_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      targets_.Get(i));
  }

  // string root = 3;
  if (this->root().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_root());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDeriveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.CreateDeriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDeriveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDeriveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.CreateDeriveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.CreateDeriveRequest)
    MergeFrom(*source);
  }
}

void CreateDeriveRequest::MergeFrom(const CreateDeriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.CreateDeriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  root_grads_.MergeFrom(from.root_grads_);
  targets_.MergeFrom(from.targets_);
  if (from.root().size() > 0) {

    root_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.root_);
  }
}

void CreateDeriveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.CreateDeriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDeriveRequest::CopyFrom(const CreateDeriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.CreateDeriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeriveRequest::IsInitialized() const {
  return true;
}

void CreateDeriveRequest::InternalSwap(CreateDeriveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  root_grads_.Swap(&other->root_grads_);
  targets_.InternalSwap(&other->targets_);
  root_.Swap(&other->root_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeriveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

CreateDeriveResponse_GradsEntry_DoNotUse::CreateDeriveResponse_GradsEntry_DoNotUse() {}
CreateDeriveResponse_GradsEntry_DoNotUse::CreateDeriveResponse_GradsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void CreateDeriveResponse_GradsEntry_DoNotUse::MergeFrom(const CreateDeriveResponse_GradsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata CreateDeriveResponse_GradsEntry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void CreateDeriveResponse_GradsEntry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void CreateDeriveResponse::InitAsDefaultInstance() {
}
class CreateDeriveResponse::_Internal {
 public:
};

CreateDeriveResponse::CreateDeriveResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.op.CreateDeriveResponse)
}
CreateDeriveResponse::CreateDeriveResponse(const CreateDeriveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  grads_.MergeFrom(from.grads_);
  // @@protoc_insertion_point(copy_constructor:distr.op.CreateDeriveResponse)
}

void CreateDeriveResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateDeriveResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
}

CreateDeriveResponse::~CreateDeriveResponse() {
  // @@protoc_insertion_point(destructor:distr.op.CreateDeriveResponse)
  SharedDtor();
}

void CreateDeriveResponse::SharedDtor() {
}

void CreateDeriveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateDeriveResponse& CreateDeriveResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateDeriveResponse_tenncor_2feteq_2fopsvc_2fdistr_2eop_2eproto.base);
  return *internal_default_instance();
}


void CreateDeriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.op.CreateDeriveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  grads_.Clear();
  _internal_metadata_.Clear();
}

const char* CreateDeriveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // map<string, string> grads = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&grads_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateDeriveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.op.CreateDeriveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> grads = 1;
  if (!this->_internal_grads().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.op.CreateDeriveResponse.GradsEntry.key");
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "distr.op.CreateDeriveResponse.GradsEntry.value");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_grads().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_grads().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_grads().begin();
          it != this->_internal_grads().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = CreateDeriveResponse_GradsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
          it = this->_internal_grads().begin();
          it != this->_internal_grads().end(); ++it) {
        target = CreateDeriveResponse_GradsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.op.CreateDeriveResponse)
  return target;
}

size_t CreateDeriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.op.CreateDeriveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, string> grads = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_grads_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_grads().begin();
      it != this->_internal_grads().end(); ++it) {
    total_size += CreateDeriveResponse_GradsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateDeriveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.op.CreateDeriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDeriveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateDeriveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.op.CreateDeriveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.op.CreateDeriveResponse)
    MergeFrom(*source);
  }
}

void CreateDeriveResponse::MergeFrom(const CreateDeriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.op.CreateDeriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  grads_.MergeFrom(from.grads_);
}

void CreateDeriveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.op.CreateDeriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDeriveResponse::CopyFrom(const CreateDeriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.op.CreateDeriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDeriveResponse::IsInitialized() const {
  return true;
}

void CreateDeriveResponse::InternalSwap(CreateDeriveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  grads_.Swap(&other->grads_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDeriveResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace op
}  // namespace distr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::distr::op::NodeData* Arena::CreateMaybeMessage< ::distr::op::NodeData >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::NodeData >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::Reachables* Arena::CreateMaybeMessage< ::distr::op::Reachables >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::Reachables >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::GetDataRequest* Arena::CreateMaybeMessage< ::distr::op::GetDataRequest >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::GetDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::ListReachableRequest* Arena::CreateMaybeMessage< ::distr::op::ListReachableRequest >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::ListReachableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::ListReachableResponse_SrcsEntry_DoNotUse* Arena::CreateMaybeMessage< ::distr::op::ListReachableResponse_SrcsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::ListReachableResponse_SrcsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::ListReachableResponse* Arena::CreateMaybeMessage< ::distr::op::ListReachableResponse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::ListReachableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse* Arena::CreateMaybeMessage< ::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::CreateDeriveRequest_RootGradsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::CreateDeriveRequest* Arena::CreateMaybeMessage< ::distr::op::CreateDeriveRequest >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::CreateDeriveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse* Arena::CreateMaybeMessage< ::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::CreateDeriveResponse_GradsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::op::CreateDeriveResponse* Arena::CreateMaybeMessage< ::distr::op::CreateDeriveResponse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::op::CreateDeriveResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
