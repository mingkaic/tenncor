// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tenncor/distr/iosvc/distr.io.proto

#include "tenncor/distr/iosvc/distr.io.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto;
namespace distr {
namespace io {
class NodeMetaDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NodeMeta> _instance;
} _NodeMeta_default_instance_;
class ListNodesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListNodesRequest> _instance;
} _ListNodesRequest_default_instance_;
class ListNodesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ListNodesResponse> _instance;
} _ListNodesResponse_default_instance_;
}  // namespace io
}  // namespace distr
static void InitDefaultsscc_info_ListNodesRequest_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::io::_ListNodesRequest_default_instance_;
    new (ptr) ::distr::io::ListNodesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::io::ListNodesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ListNodesRequest_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ListNodesRequest_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto}, {}};

static void InitDefaultsscc_info_ListNodesResponse_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::io::_ListNodesResponse_default_instance_;
    new (ptr) ::distr::io::ListNodesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::io::ListNodesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ListNodesResponse_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ListNodesResponse_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto}, {
      &scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base,}};

static void InitDefaultsscc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::distr::io::_NodeMeta_default_instance_;
    new (ptr) ::distr::io::NodeMeta();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::distr::io::NodeMeta::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::io::NodeMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::io::NodeMeta, instance_),
  PROTOBUF_FIELD_OFFSET(::distr::io::NodeMeta, uuid_),
  PROTOBUF_FIELD_OFFSET(::distr::io::NodeMeta, dtype_),
  PROTOBUF_FIELD_OFFSET(::distr::io::NodeMeta, shape_),
  PROTOBUF_FIELD_OFFSET(::distr::io::NodeMeta, remote_str_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::io::ListNodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::io::ListNodesRequest, uuids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::distr::io::ListNodesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::distr::io::ListNodesResponse, values_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::distr::io::NodeMeta)},
  { 10, -1, sizeof(::distr::io::ListNodesRequest)},
  { 16, -1, sizeof(::distr::io::ListNodesResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::io::_NodeMeta_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::io::_ListNodesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::distr::io::_ListNodesResponse_default_instance_),
};

const char descriptor_table_protodef_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"tenncor/distr/iosvc/distr.io.proto\022\010di"
  "str.io\"\\\n\010NodeMeta\022\020\n\010instance\030\001 \001(\t\022\014\n\004"
  "uuid\030\002 \001(\t\022\r\n\005dtype\030\003 \001(\t\022\r\n\005shape\030\004 \003(\003"
  "\022\022\n\nremote_str\030\005 \001(\t\"!\n\020ListNodesRequest"
  "\022\r\n\005uuids\030\001 \003(\t\"7\n\021ListNodesResponse\022\"\n\006"
  "values\030\001 \003(\0132\022.distr.io.NodeMeta2R\n\nDist"
  "rInOut\022D\n\tListNodes\022\032.distr.io.ListNodes"
  "Request\032\033.distr.io.ListNodesResponseb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_sccs[3] = {
  &scc_info_ListNodesRequest_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base,
  &scc_info_ListNodesResponse_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base,
  &scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_once;
static bool descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto = {
  &descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_initialized, descriptor_table_protodef_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto, "tenncor/distr/iosvc/distr.io.proto", 324,
  &descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_once, descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_sccs, descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto::offsets,
  file_level_metadata_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto, 3, file_level_enum_descriptors_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto, file_level_service_descriptors_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto), true);
namespace distr {
namespace io {

// ===================================================================

void NodeMeta::InitAsDefaultInstance() {
}
class NodeMeta::_Internal {
 public:
};

NodeMeta::NodeMeta()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.io.NodeMeta)
}
NodeMeta::NodeMeta(const NodeMeta& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  instance_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_instance().empty()) {
    instance_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uuid().empty()) {
    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  dtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dtype().empty()) {
    dtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dtype_);
  }
  remote_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_remote_str().empty()) {
    remote_str_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.remote_str_);
  }
  // @@protoc_insertion_point(copy_constructor:distr.io.NodeMeta)
}

void NodeMeta::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base);
  instance_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dtype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  remote_str_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NodeMeta::~NodeMeta() {
  // @@protoc_insertion_point(destructor:distr.io.NodeMeta)
  SharedDtor();
}

void NodeMeta::SharedDtor() {
  instance_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dtype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  remote_str_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NodeMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NodeMeta& NodeMeta::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NodeMeta_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base);
  return *internal_default_instance();
}


void NodeMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.io.NodeMeta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  instance_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  dtype_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  remote_str_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* NodeMeta::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_instance();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.io.NodeMeta.instance"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string uuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uuid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.io.NodeMeta.uuid"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dtype = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_dtype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.io.NodeMeta.dtype"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 shape = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string remote_str = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_remote_str();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.io.NodeMeta.remote_str"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NodeMeta::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.io.NodeMeta)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance = 1;
  if (this->instance().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance().data(), static_cast<int>(this->_internal_instance().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.io.NodeMeta.instance");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance(), target);
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.io.NodeMeta.uuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uuid(), target);
  }

  // string dtype = 3;
  if (this->dtype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dtype().data(), static_cast<int>(this->_internal_dtype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.io.NodeMeta.dtype");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dtype(), target);
  }

  // repeated int64 shape = 4;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          4, _internal_shape(), byte_size, target);
    }
  }

  // string remote_str = 5;
  if (this->remote_str().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_remote_str().data(), static_cast<int>(this->_internal_remote_str().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.io.NodeMeta.remote_str");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_remote_str(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.io.NodeMeta)
  return target;
}

size_t NodeMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.io.NodeMeta)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 shape = 4;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string instance = 1;
  if (this->instance().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance());
  }

  // string uuid = 2;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  // string dtype = 3;
  if (this->dtype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dtype());
  }

  // string remote_str = 5;
  if (this->remote_str().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_remote_str());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NodeMeta::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.io.NodeMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const NodeMeta* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NodeMeta>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.io.NodeMeta)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.io.NodeMeta)
    MergeFrom(*source);
  }
}

void NodeMeta::MergeFrom(const NodeMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.io.NodeMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.instance().size() > 0) {

    instance_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.instance_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.dtype().size() > 0) {

    dtype_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.dtype_);
  }
  if (from.remote_str().size() > 0) {

    remote_str_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.remote_str_);
  }
}

void NodeMeta::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.io.NodeMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeMeta::CopyFrom(const NodeMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.io.NodeMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeMeta::IsInitialized() const {
  return true;
}

void NodeMeta::InternalSwap(NodeMeta* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  instance_.Swap(&other->instance_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uuid_.Swap(&other->uuid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dtype_.Swap(&other->dtype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  remote_str_.Swap(&other->remote_str_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata NodeMeta::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListNodesRequest::InitAsDefaultInstance() {
}
class ListNodesRequest::_Internal {
 public:
};

ListNodesRequest::ListNodesRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.io.ListNodesRequest)
}
ListNodesRequest::ListNodesRequest(const ListNodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      uuids_(from.uuids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:distr.io.ListNodesRequest)
}

void ListNodesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListNodesRequest_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base);
}

ListNodesRequest::~ListNodesRequest() {
  // @@protoc_insertion_point(destructor:distr.io.ListNodesRequest)
  SharedDtor();
}

void ListNodesRequest::SharedDtor() {
}

void ListNodesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListNodesRequest& ListNodesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListNodesRequest_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base);
  return *internal_default_instance();
}


void ListNodesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.io.ListNodesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uuids_.Clear();
  _internal_metadata_.Clear();
}

const char* ListNodesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string uuids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_uuids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "distr.io.ListNodesRequest.uuids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListNodesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.io.ListNodesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string uuids = 1;
  for (int i = 0, n = this->_internal_uuids_size(); i < n; i++) {
    const auto& s = this->_internal_uuids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "distr.io.ListNodesRequest.uuids");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.io.ListNodesRequest)
  return target;
}

size_t ListNodesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.io.ListNodesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string uuids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(uuids_.size());
  for (int i = 0, n = uuids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      uuids_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.io.ListNodesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListNodesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.io.ListNodesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.io.ListNodesRequest)
    MergeFrom(*source);
  }
}

void ListNodesRequest::MergeFrom(const ListNodesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.io.ListNodesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  uuids_.MergeFrom(from.uuids_);
}

void ListNodesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.io.ListNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodesRequest::CopyFrom(const ListNodesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.io.ListNodesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodesRequest::IsInitialized() const {
  return true;
}

void ListNodesRequest::InternalSwap(ListNodesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  uuids_.InternalSwap(&other->uuids_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNodesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ListNodesResponse::InitAsDefaultInstance() {
}
class ListNodesResponse::_Internal {
 public:
};

ListNodesResponse::ListNodesResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:distr.io.ListNodesResponse)
}
ListNodesResponse::ListNodesResponse(const ListNodesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      values_(from.values_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:distr.io.ListNodesResponse)
}

void ListNodesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ListNodesResponse_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base);
}

ListNodesResponse::~ListNodesResponse() {
  // @@protoc_insertion_point(destructor:distr.io.ListNodesResponse)
  SharedDtor();
}

void ListNodesResponse::SharedDtor() {
}

void ListNodesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ListNodesResponse& ListNodesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ListNodesResponse_tenncor_2fdistr_2fiosvc_2fdistr_2eio_2eproto.base);
  return *internal_default_instance();
}


void ListNodesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:distr.io.ListNodesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear();
}

const char* ListNodesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .distr.io.NodeMeta values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ListNodesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:distr.io.ListNodesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .distr.io.NodeMeta values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:distr.io.ListNodesResponse)
  return target;
}

size_t ListNodesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:distr.io.ListNodesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .distr.io.NodeMeta values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListNodesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:distr.io.ListNodesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ListNodesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ListNodesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:distr.io.ListNodesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:distr.io.ListNodesResponse)
    MergeFrom(*source);
  }
}

void ListNodesResponse::MergeFrom(const ListNodesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:distr.io.ListNodesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void ListNodesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:distr.io.ListNodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListNodesResponse::CopyFrom(const ListNodesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:distr.io.ListNodesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListNodesResponse::IsInitialized() const {
  return true;
}

void ListNodesResponse::InternalSwap(ListNodesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ListNodesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace io
}  // namespace distr
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::distr::io::NodeMeta* Arena::CreateMaybeMessage< ::distr::io::NodeMeta >(Arena* arena) {
  return Arena::CreateInternal< ::distr::io::NodeMeta >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::io::ListNodesRequest* Arena::CreateMaybeMessage< ::distr::io::ListNodesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::distr::io::ListNodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::distr::io::ListNodesResponse* Arena::CreateMaybeMessage< ::distr::io::ListNodesResponse >(Arena* arena) {
  return Arena::CreateInternal< ::distr::io::ListNodesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
