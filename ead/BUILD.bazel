licenses(["notice"])

load("//third_party/drake_rules:pybind.bzl", "pybind_library")

filegroup(
    name = "srcs",
    srcs = glob([
        "*.hpp",
        "src/*.cpp",
    ]) + ["BUILD.bazel"],
    visibility = ["//visibility:public"],
)

filegroup(
    name = "ctest_srcs",
    srcs = glob([
        "test/*.hpp",
        "test/*.cpp",
    ]),
)

filegroup(
    name = "ptest_srcs",
    srcs = glob([
        "test/*.py",
    ]),
)

filegroup(
    name = "benchmark_srcs",
    srcs = glob([
        "bm/*.hpp",
        "bm/*.cpp",
    ]),
)

######### LIBRARY #########

py_binary(
    name = "agen",
    srcs = glob(["age/agen.py", "age/plugins/*.py"]),
    deps = ["//gen:gen"],
)

genrule(
    name = "generated_ead",
    srcs = ["//cfg:ead"],
    outs = [
        "generated/api.hpp",
        "generated/api.cpp",
        "generated/opcode.hpp",
        "generated/opcode.cpp",
        "generated/dtype.hpp",
        "generated/dtype.cpp",
        "generated/pyapi.hpp",
        "generated/pyapi_tenncor.cpp",
    ],
    tools = ["//ead:agen"],
    cmd = "$(location //ead:agen) " +
        "--cfg $(location //cfg:ead) " +
        "--out $(@D)/generated " +
        "--strip_prefix=$$(dirname $(@D))",
)

cc_library(
    name = "ead",
    hdrs = glob([
        "*.hpp",
        "opt/*.hpp",
    ]) + [
        "//ead:generated/api.hpp",
        "//ead:generated/opcode.hpp",
        "//ead:generated/dtype.hpp",
        "//ead:generated/pyapi.hpp",
    ],
    srcs = glob([
        "src/*.cpp",
    ]) + [
        "//ead:generated/api.cpp",
        "//ead:generated/opcode.cpp",
        "//ead:generated/dtype.cpp",
    ],
    copts = ["-std=c++17"],
    deps = [
        "//ade:ade",
        "//pbm:pbm",
        "//tag:tag",
        "//opt:opt",
        "@com_github_eigenteam_eigen//:eigen",
    ],
    visibility = ["//visibility:public"],
)

pybind_library(
    name = "tenncor_py",
    cc_srcs = ["//ead:generated/pyapi_tenncor.cpp"],
    cc_deps = ["//ead:ead"],
)

pybind_library(
    name = "ead_py",
    cc_srcs = ["//ead:python/ead.cpp"],
    cc_deps = ["//ead:ead"],
    py_deps = ["//ead:tenncor_py"],
    visibility = ["//visibility:public"],
)

######### TEST #########

cc_test(
    name = "ctest",
    srcs = ["//ead:ctest_srcs"],
    copts = ["-std=c++17"],
    deps = [
        "//ead:ead",
        "@gtest//:gtest",
        "@com_github_mingkaic_cppkg//exam:exam",
    ],
    linkstatic = True,
    data = ["//cfg:optimizations"],
)

py_test(
    name = "ptest",
    srcs = ["//ead:ptest_srcs"],
    deps = [
        "//ead:ead_py",
        "//testutil:pyunit_util",
    ],
    data = ["//testutil:ead_testcase_template"],
)

######### BENCHMARK #########

cc_binary(
    name = "benchmark",
    srcs = ["bm/benchmark.cpp"],
    deps = [
        "//ead:ead",
        "@com_github_google_benchmark//:benchmark",
    ],
    copts = ["-std=c++17"],
    data = ["//cfg:optimizations"],
)
