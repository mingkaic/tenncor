template: typename T
requires: TenncorAPI
name: RandomAPI
members:
  - name: super
    type: TenncorAPI<T>*
init:
  args:
    - name: super
      type: TenncorAPI<T>*
  initlist:
    super: super
funcs:
  - name: rand_unif
    args:
    - type: const eteq::ETensor&
      name: a
    - type: const eteq::ETensor&
      name: b
    out:
      type: eteq::ETensor
      val: return eteq::ETensor(eteq::make_functor(::egen::RAND_UNIF,teq::TensptrsT{a,b}),super->ctx);
  - name: rand_binom_one
    args:
    - type: const eteq::ETensor&
      name: arg
    out:
      type: eteq::ETensor
      val: |
          //
              auto trial = this->rand_unif(
                  eteq::make_variable_like<T>((T) 0,arg,"0",super->ctx),
                  eteq::make_variable_like<T>((T) 1,arg,"1",super->ctx));
              return super->lt(trial,arg);
