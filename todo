**** LEGEND ****
P1 = "blocker/fail to build"
P2 = "todo"
P3 = "want to have"
P4 = "nice to have/need investigating"
P5 = "get to it eventually"

=== feature ===
P2 - reimplement conv nn layer + dbn
    P3 - force dbn to conform to established trainer pattern (if no subgraph yet)
P3 - implement grader extension for subgraphs
P4 - implement reduce_prod gradient using Eigen cumprod

=== structure ===
P3 - generalize rule conversion feature for all implementations of ade nodes
P4 - move ead helper functions in ade

=== correction ===
P3 - reorient tests so that tests cover its own immediate module
P3 - maximize coverage
P3 - test rule conversion
P3 - test rocnnet + eqns, modl, and trainer (or subgraph equivalent)
P4 - test complicate equations (generate random valid equations)

=== transparency ===
P4 - add even more debugging tools
P4 - formalize codestyle
P4 - refactor, and rename variables to improve readability
P4 - conform to some bazel style/convention (or change to another build tool)

=== update ===
P2 - update all fmts usages
P3 - address warnings

=== performance ===
general performance:
P3 - benchmark test rocnnet against various other frameworks (CPU only)
P4 - implement GPU settings
P4 - remove unordered_map/unordered_set if we're not using them properly
P4 - define optimization conversion rules to increase data accuracy
P4 - more performance test

run-time performance:
P2 - define session interface then improve session implementation
P3 - define dataflow to take advantage of parallel processing at node-level
P4 - investigate remote sessions for distributed processing

graph-setup performance:
P3 - improve optimization rule matching
